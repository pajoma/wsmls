@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://purl.org/net/wsml/dolceDnS#> .
@prefix dolce: <http://purl.org/net/wsml/dolce#> .
@prefix src: <http://www.loa-cnr.it/ontologies/SpatialRelations.owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .

# http://purl.org/dc/elements/1.1/publisher: "IfGI, University of Muenster"^^<http://www.w3.org/2001/XMLSchema#string>
# http://purl.org/dc/elements/1.1/type: "Foundational Ontology"^^<http://www.w3.org/2001/XMLSchema#string>
# http://purl.org/dc/elements/1.1/title: "Dolce Ontology (Description and Situations)"^^<http://www.w3.org/2001/XMLSchema#string>
# http://purl.org/dc/elements/1.1/description: "An ontology of collections, collectives, social units, and systems, plugins to DnS. These are placeholders for a more ambitious ontology of basic entities from the social world. OWL engineering by Aldo Gangemi. WSML Translation by Patrick Maué"^^<http://www.w3.org/2001/XMLSchema#string>
# http://purl.org/dc/elements/1.1/source: "http://www.loa-cnr.it/ontologies/ExtendedDnS.owl"^^<http://www.w3.org/2001/XMLSchema#string>
# http://purl.org/dc/elements/1.1/subject: "dolce, foundational, module, spatial"^^<http://www.w3.org/2001/XMLSchema#string>

:agent a rdfs:Class ;
	rdfs:subClassOf dolce:endurant ;
	rdfs:label "agent@en"^^xsd:string ;
	dc:description "A catch-all class used to join agentive objects (either physical or social). Agents are dispositionally so, in the sense that they internally represent descriptions, and in particular plans, goals and possible actions, but they do not necessarily act. In everyday language, agent is used in this sense, but also to tell that something has acted in a certain way, or to say that something has an initiator or leading role in some action. In DLP, the performs relation encodes these notions."^^xsd:string .

:agentive_physical_object a rdfs:Class ;
	rdfs:subClassOf :agent ;
	rdfs:label "agentive_physical_object@en"^^xsd:string ;
	dc:description "desc"^^xsd:string .

:rational_physical_object a rdfs:Class ;
	rdfs:subClassOf :agentive_physical_object , :rational_agent ;
	rdfs:label "rational_physical_object@en"^^xsd:string , "agent@en"^^xsd:string ;
	dc:description "In this ontology, a rational object is encoded as having the ability to internally represent meta-descriptions (descriptions that have other descriptions playing roles used by them). Other theories of rational agency assume desires and intentions for these objects, but in principle any agent can have desires and intentions: the very difference seems to be the ability to choose among different desires or intentions by going 'meta-level'."^^xsd:string , "desc"^^xsd:string .

:agentive_social_object a rdfs:Class ;
	rdfs:subClassOf :agent , :social_object ;
	rdfs:label "agentive-social-object@en"^^xsd:string ;
	dc:description "A social object that is assumed to adopt a plan. Since social objects are dependent on physical ones, adoption involves that a social object is acted-by physical agents that 'internally represents' that plan.  For example, an institution can adopt the plan to promote or regulate some activities, but this is possible by means of the powers conferred to it by some legal system, through its representatives, and that plan has to be executed by means of the physical agents that 'act for' the institution."^^xsd:string , """A social object that is assumed to adopt a plan. Since social objects are dependent on physical
			ones, adoption involves that a social object is acted-by physical agents that 'internally represents' that plan. For 
			example, an institution can adopt the plan to promote or regulate some activities, but this is possible by means of 
			the powers conferred to it by some legal system, through its representatives, and that plan has to be executed by means
			of the physical agents that 'act for' the institution."""^^xsd:string .

:adopts a rdf:Property ;
	rdfs:domain :agentive_social_object ;
	rdfs:range dolce:plan .

:agentive_figure a rdfs:Class ;
	rdfs:subClassOf :agentive_social_object , :agent , :figure ;
	rdfs:label "agentive-figure@en"^^xsd:string ;
	dc:description "Agentive figures are those which are assigned (agentive) roles from a society or community; hence, they can act like a physical agent. Typical agentive figures are societies, organizations, and in general all socially constructed persons. Agentive figures are not dependent on roles defined or used in the same descriptions they are defined or used, but they can act because they depute some powers to some of those roles. In other words, a figure classified by some agentive role can play that role because there are other roles in the descriptions that define or use the figure. Those roles classifies endurants that result to act for the figure. For example, an employee acts for an organization that deputes the role (e.g. turner) that classifies the employee. Simply put, a guy working as a turner at FIAT acts for (or on behalf of) FIAT. In complex figures, like organizations or companies, a total agency is possible when an endurant plays a delegate or representative role of the figure. Since figures are social objects, it is conceivable to find agentive figures that act for other agentive figures."^^xsd:string , """Agentive figures are those which are assigned (agentive) roles from a society or community; 
			hence, they can act like a physical agent. Typical agentive figures are societies, organizations, and in general 
			all socially constructed persons. Agentive figures are not dependent on roles defined or used in the same descriptions
			they are defined or used, but they can act because they depute some powers to some of those roles. In other words, 
			a figure classified by some agentive role can play that role because there are other roles in the descriptions that 
			define or use the figure. Those roles classifies endurants that result to act for the figure. For example, an employee
			acts for an organization that deputes the role (e.g. turner) that classifies the employee. Simply put, a guy working 
			as a turner at FIAT acts for (or on behalf of) FIAT. In complex figures, like organizations or companies, a total 
			agency is possible when an endurant plays a delegate or representative role of the figure. Since figures are social 
			objects, it is conceivable to find agentive figures that act for other agentive figures."""^^xsd:string , """Agentive figures are those which are assigned (agentive) roles from a society or community; 
			hence, they can act like a physical agent. Typical agentive figures are societies, organizations, and in general 
			all socially constructed persons. Agentive figures are not dependent on roles defined or used in the same descriptions
			they are defined or used, but they can act because they depute some powers to some of those roles. In other words, a 
			figure classified by some agentive role can play that role because there are other roles in the descriptions that 
			define or use the figure. Those roles classifies endurants that result to act for the figure. For example, an employee 
			acts for an organization that deputes the role (e.g. turner) that classifies the employee. Simply put, a guy working 
			as a turner at FIAT acts for (or on behalf of) FIAT. In complex figures, like organizations or companies, a total 
			agency is possible when an endurant plays a delegate or representative role of the figure. Since figures are social 
			objects, it is conceivable to find agentive figures that act for other agentive figures."""^^xsd:string .

:plays a rdf:Property ;
	rdfs:domain :agentive_figure ;
	rdfs:range :role .

:rational_agent a rdfs:Class ;
	rdfs:subClassOf :agent ;
	rdfs:label "rational-agent@en"^^xsd:string ;
	dc:description "Either a rational physical object (e.g. an animal capable of meta-representations), or a social object acted by a rational physical object (e.g. an organization)."^^xsd:string .

:physical_realization a rdfs:Class ;
	rdfs:subClassOf dolce:spatio_temporal_particular ;
	rdfs:label "physical-realization@en"^^xsd:string ;
	dc:description "Any physical particular that realizes a non-physical endurant. Such physical particulars can be either physical endurants, physical qualities, physical regions, perdurants with at least one physical participant, or a situation with one physical entity in its setting.Ultimately, a physical realization depends on at least one physical endurant (each of the others physical entity types depend on a physical endurant to be considered as such)."^^xsd:string .

:cognitive_event a rdfs:Class ;
	rdfs:subClassOf dolce:event ;
	rdfs:label "cognitive-event@en"^^xsd:string ;
	dc:description "An event occurring in the (embodied) mind."^^xsd:string .

dolce:total_constant_participant a rdf:Property ;
	rdfs:domain :cognitive_event ;
	rdfs:range :agentive_physical_object .

:flux a rdfs:Class ;
	rdfs:subClassOf dolce:process ;
	rdfs:label "flux@en"^^xsd:string ;
	dc:description "Fluxes are processes that (also) contain accomplishments as constituents. In other words, fluxes emerge out of accomplishments."^^xsd:string .

:reconstructed_flux a rdfs:Class ;
	rdfs:subClassOf :flux ;
	rdfs:label "reconstructed-flux@en"^^xsd:string ;
	dc:description "Reconstructed fluxes are fluxes that only contain accomplishments as members."^^xsd:string .

:cognitive_state a rdfs:Class ;
	rdfs:subClassOf dolce:state ;
	rdfs:label "cognitive-state@en"^^xsd:string ;
	dc:description "A state of the (embodied) mind"^^xsd:string .

:action a rdfs:Class ;
	rdfs:subClassOf dolce:accomplishment ;
	rdfs:label "action@en"^^xsd:string ;
	dc:description """A Perdurant that exemplifies the intentionality of an agent. Could it be aborted, incomplete, 
			mislead, while remaining a (potential) accomplishment ... The point here is that having a result depends on a method, 
			then an action remains an action under incomplete results. As a matter of fact, if we neutralize intentionality, a 
			purely topological, post-hoc view is at odds with the notion of incomplete accomplishments."""^^xsd:string .

dolce:generically_dependent_on a rdf:Property ;
	rdfs:domain :action ;
	rdfs:range :cognitive_state .

dolce:participant a rdf:Property ;
	rdfs:domain :action ;
	rdfs:range :agent .

:activity a rdfs:Class ;
	rdfs:subClassOf :action ;
	rdfs:label "activity@en"^^xsd:string ;
	dc:description """In dependency terms, an activity is an action that is generically constantly dependent on a 
			(at least partly) shared plan adopted by participants. This condition implies that an action must be sequenced by a 
			task.Intuitively, activities are complex actions that are at least partly conventionally planned."""^^xsd:string .

dolce:generically_dependent_on a rdf:Property ;
	rdfs:domain :activity ;
	rdfs:range dolce:plan .

dolce:part a rdf:Property ;
	rdfs:domain :activity ;
	rdfs:range :action .

:communication_event a rdfs:Class ;
	rdfs:subClassOf dolce:accomplishment ;
	rdfs:label "communication-event@en"^^xsd:string ;
	dc:description """Here communication is taken in a rather wide sense, being possible as an (intentional) activity 
			as well as a phenomenon."""^^xsd:string .

:phenomenon a rdfs:Class ;
	rdfs:subClassOf dolce:accomplishment ;
	rdfs:label "phenomenon@en"^^xsd:string ;
	dc:description """A phenomenon is basically a process that does not include any intentional active participation. 
			Therefore, it cannot be sequenced by a task. It can be seen as an accomplishment when some intentionality puts 
			boundaries on it (although it is not claimed to be inherently intentional). On the other hand, a purely physical 
			phenomenon does not seem to have inherent boundaries either ... and also for biological processes as well as 
			economic processes this seems to be disputable. If the boundary hypothesis is discarded, phenomenon should migrate 
			under process."""^^xsd:string .

:physical_phenomenon a rdfs:Class ;
	rdfs:subClassOf :phenomenon ;
	rdfs:label "physical-phenomenon@en"^^xsd:string ;
	dc:description "A phenomenon having a physical endurant as participant"^^xsd:string .

dolce:participant a rdf:Property ;
	rdfs:domain :physical_phenomenon ;
	rdfs:range dolce:physical_endurant .

:non_agentive_physical_object a rdfs:Class ;
	rdfs:subClassOf dolce:physical_object ;
	rdfs:label "non-agentive-physical-object@en"^^xsd:string ;
	dc:description """Within physical objects, a special place have those to which we ascribe intentions, 
			beliefs, and desires. These are called Agentive, as opposite to Non-agentive. Intentionality is understood 
			here as the capability of heading for/dealing with objects or states of the world. This is an important area 
			of ontological investigation we haven't properly explored yet, so our suggestions are really very preliminary. 
			A possible modelling of case roles has been started within the descriptions plugin that could be embedded 
			within basic DOLCE. In general, we assume that agentive objects are constituted by non-agentive objects: an 
			organism is constituted by bodily organs, a robot is constituted by some machinery, and so on. Among 
			non-agentive physical objects we have for example houses, body organs, pieces of wood, etc."""^^xsd:string .

:material_artifact a rdfs:Class ;
	rdfs:subClassOf :non_agentive_physical_object ;
	rdfs:label "material-artifact@en"^^xsd:string ;
	dc:description """No easy definition of artifactual properties is possible, hence it is better to rely on 
			alternative descriptions and roles: a physical object that shows or is known to have an artifactual origin that 
			counts in the tasks an ontology is supposed to support, will be a material artifact. On the other hand, physical 
			objects that do not show that origin, or that origin is unimportant for the task of the ontology, will be physical 
			bodies. Formally, a restriction is provided here that requires that the collection whose members are (at least some 
			of the) proper parts of a material artifact is *unified* by a plan or project."""^^xsd:string .

:social_object a rdfs:Class ;
	rdfs:subClassOf dolce:non_physical_object ;
	rdfs:label "social-object@en"^^xsd:string ;
	dc:description """A catch-all class for entities from the social world. It includes agentive and non-agentive 
			socially-constructed objects: descriptions, concepts, figures, collections, information objects. It could be 
			equivalent to 'non-physical object', but we leave the possibility open of 'private' non-physical objects."""^^xsd:string .

:figure a rdfs:Class ;
	rdfs:subClassOf :social_object ;
	rdfs:label "figure@en"^^xsd:string ;
	dc:description """a.k.a. 'social individual'. Figures are social objects defined or used by descriptions, but 
			differently from concepts, they do not classify entities. Examples of figures are organizations, political-geographic 
			objects, sacred symbols, etc."""^^xsd:string .

:non_agentive_figure a rdfs:Class ;
	rdfs:subClassOf :figure ;
	rdfs:label "non-agentive-figure@en"^^xsd:string , "sss@en"^^xsd:string ;
	dc:description "A typology of non-agentive figures is currently under investigation."^^xsd:string , "ssss"^^xsd:string .

:plays a rdf:Property ;
	rdfs:domain :non_agentive_figure ;
	rdfs:range :role .

:non_agentive_social_object a rdfs:Class ;
	rdfs:subClassOf :social_object ;
	rdfs:label "non-agentive-social-object@en"^^xsd:string ;
	dc:description """A social object that is not agentive in the sense of adopting a plan or being acted by some 
			physical agent. See 'agentive-social-object' for more detail."""^^xsd:string .

:collection a rdfs:Class ;
	rdfs:subClassOf :non_agentive_social_object ;
	rdfs:label "collection@en"^^xsd:string ;
	dc:description """Collections are social objects which, although not defined by a description, depend both on 
			member entities and on some concepts or figures, hence indirectly on descriptions. While we could talk in general 
			of collections of any kind of entities (events, objects, abstracts, etc.), we restrict here our attention to 
			collections of endurants, and to the concepts that classify them (i.e. roles)."""^^xsd:string .

:unified_by a rdf:Property ;
	rdfs:domain :collection ;
	rdfs:range :description .

dolce:part a rdf:Property ;
	rdfs:domain :collection ;
	rdfs:range :collection .

:refined_by a rdf:Property ;
	rdfs:domain :collection ;
	rdfs:range :collection .

:specialized_by a rdf:Property ;
	rdfs:domain :collection ;
	rdfs:range :collection .

:collective a rdfs:Class ;
	rdfs:subClassOf :figure ;
	rdfs:label "collective@en"^^xsd:string ;
	dc:description "A collection with only agents as members."^^xsd:string .

:member a rdf:Property ;
	rdfs:domain :collective ;
	rdfs:range :agent .

:c_description a rdfs:Class ;
	rdfs:subClassOf :non_agentive_social_object ;
	rdfs:label "concept@en"^^xsd:string ;
	dc:description "AKA C-Description. A non-physical object that is defined by a description s, and whose function is classifying entities from a ground ontology in order to build situations that can satisfy s."^^xsd:string .

dolce:part a rdf:Property ;
	rdfs:domain :c_description ;
	rdfs:range :c_description .

:defined_by a rdf:Property ;
	rdfs:domain :c_description ;
	rdfs:range :description .

:refined_by a rdf:Property ;
	rdfs:domain :c_description ;
	rdfs:range :c_description .

:specialized_by a rdf:Property ;
	rdfs:domain :c_description ;
	rdfs:range :c_description .

:course a rdfs:Class ;
	rdfs:subClassOf :c_description ;
	rdfs:label "course@en"^^xsd:string ;
	dc:description "A concept that classifies (in particular, it 'sequences') perdurants (processes, events, or states), as a component of some description. Courses are the descriptive counterpart of perdurants, and, since perdurants have endurants as participants, they are usually the function of some role."^^xsd:string .

:defined_by a rdf:Property ;
	rdfs:domain :course ;
	rdfs:range :description .

:specialized_by a rdf:Property ;
	rdfs:domain :course ;
	rdfs:range :course .

dolce:part a rdf:Property ;
	rdfs:domain :course ;
	rdfs:range :course .

:life_cycle a rdfs:Class ;
	rdfs:subClassOf :course ;
	rdfs:label "life-cycle@en"^^xsd:string ;
	dc:description "The course of events typical of the life of an object (kind)"^^xsd:string .

:path a rdfs:Class ;
	rdfs:subClassOf :course ;
	rdfs:label "path@en"^^xsd:string ;
	dc:description "A course used to sequence phenomena (non-intentional processes)."^^xsd:string .

:task a rdfs:Class ;
	rdfs:subClassOf :course ;
	rdfs:label "task@en"^^xsd:string ;
	dc:description """A course used to sequence activities or other controllable perdurants (some states, processes), 
			usually within methods. They must be defined by a method, but can be *used* by other kinds of descriptions. They are 
			desire targets of some role played by an agent. Tasks can be complex, and ordered according to an abstract succession 
			relation. Tasks can relate to ground activities or decision making; the last kind deals with typical flowchart content.
			A task is different both from a flowchart node, and from an action or action type.Tasks can be considered shortcuts for
			plans, since at least one role played by an agent has a desire attitude towards them (possibly different from the one 
			that puts the task into action). In principle, tasks could be transformed into explicit plans."""^^xsd:string .

:defined_by a rdf:Property ;
	rdfs:domain :task ;
	rdfs:range :method .

:specialized_by a rdf:Property ;
	rdfs:domain :task ;
	rdfs:range :task .

:parameter a rdfs:Class ;
	rdfs:subClassOf :figure ;
	rdfs:label "parameter@en"^^xsd:string ;
	dc:description "ssss"^^xsd:string .

:defined_by a rdf:Property ;
	rdfs:domain :parameter ;
	rdfs:range :description .

:valued_by a rdf:Property ;
	rdfs:domain :parameter ;
	rdfs:range dolce:region .

:specialized_by a rdf:Property ;
	rdfs:domain :parameter ;
	rdfs:range :parameter .

:indicator a rdfs:Class ;
	rdfs:subClassOf :parameter ;
	rdfs:label "indicator@en"^^xsd:string ;
	dc:description "A parameter valued by regions that are used asindicators for some behaviour or event to be checked."^^xsd:string .

:role a rdfs:Class ;
	rdfs:subClassOf :figure ;
	rdfs:label "role@en"^^xsd:string ;
	dc:description """Also known as 'functional role'. A concept that classifies (in particular, it is 'played by')
			endurants, as used in some description. Roles are the descriptive counterpart of endurants, and, as endurants 
			participate in perdurants, they usually have courses as modal targets (see).
			The typology of roles is still preliminary."""^^xsd:string .

:defined_by a rdf:Property ;
	rdfs:domain :role ;
	rdfs:range :description .

:specialized_by a rdf:Property ;
	rdfs:domain :role ;
	rdfs:range :role .

:agent_driven_role a rdfs:Class ;
	rdfs:subClassOf :role ;
	rdfs:label "agent-driven-role@en"^^xsd:string ;
	dc:description "AKA Agentive-role. A role that can only be played by agents."^^xsd:string .

:status a rdfs:Class ;
	rdfs:subClassOf :agent_driven_role ;
	rdfs:label "status@en"^^xsd:string ;
	dc:description """A role that involves responsibility, e.g. both duties and rights, in order to perform some 
			task. It usually involves additional rights and/or powers in contexts (descriptions) different from the one that 
			defines the status."""^^xsd:string .

:description_role a rdfs:Class ;
	rdfs:subClassOf :role ;
	rdfs:label "description-role@en"^^xsd:string ;
	dc:description """A role played by descriptions only. Usable for metalinguistic notions, like those that deal with
			 granular partitions of knowledge, strata of reality, argumentation, etc."""^^xsd:string .

:played_by a rdf:Property ;
	rdfs:domain :description_role ;
	rdfs:range :description .

:logical_role a rdfs:Class ;
	rdfs:subClassOf :description_role ;
	rdfs:label "logical-role@en"^^xsd:string ;
	dc:description "A role used to express logical levels within some layering description or granular partition. A typical example is the Linnean taxonomic ordering, where Phylum or Species are hierarchical roles."^^xsd:string .

:social_role a rdfs:Class ;
	rdfs:subClassOf :role ;
	rdfs:label "social-role@en"^^xsd:string ;
	dc:description "A role created and maintained by a society."^^xsd:string .

dolce:generically_dependent_on a rdf:Property ;
	rdfs:domain :social_role ;
	rdfs:range :collective .

:symmetric_role a rdfs:Class ;
	rdfs:subClassOf :role ;
	rdfs:label "symmetric-role@en"^^xsd:string ;
	dc:description "A role played exactly by two objects at the same time, e.g.: brother, sibling."^^xsd:string .

:description a rdfs:Class ;
	rdfs:subClassOf :non_agentive_social_object ;
	rdfs:label "description@en"^^xsd:string ;
	dc:description """A description is a social object which represents a conceptualization (e.g. a mental object or 
			state), hence it is generically dependent on some agent and communicable. Descriptions define or use concepts or 
			figures, are expressed by an information object and can be satisfied by situations. The typology of descriptions 
			is still preliminary."""^^xsd:string .

:expressed_by a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :information_object .

:refined_by a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :description .

:specialized_by a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :description .

:constitutive_description a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "constitutive-description@en"^^xsd:string ;
	dc:description "A description whose purpose is defining a figure."^^xsd:string .

:defines_ a rdf:Property ;
	rdfs:domain :constitutive_description ;
	rdfs:range :figure , :role .

:information_encoding_system a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "information-encoding-system@en"^^xsd:string ;
	dc:description "An information encoding system is a description that involves information objects. They can be divided into 1) axiomatic systems, which provide roles and operations to define formal descriptions (e.g. theories), 2) combinatorial systems, which provide roles and operations to create valid information objects (e.g. grammars), 3) classification systems, which are contexts of (ev. ordered) lists of information objects, and 4) informal encoding systems, which provide roles and operations to define informal descriptions (e.g. narratives)."^^xsd:string .

:method a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "sss@en"^^xsd:string ;
	dc:description "ssss"^^xsd:string .

:d_uses a rdf:Property ;
	rdfs:domain :method ;
	rdfs:range :role , :task .

:plan a rdfs:Class ;
	rdfs:subClassOf :method ;
	rdfs:label "plan@en"^^xsd:string ;
	dc:description "A plan is a method for executing or performing a procedure or a stage of a procedure. A plan must use both at least one role played by an agent, and at least one task. Finally, a plan has a goal as proper part, and can also have regulations and other descriptions as proper parts."^^xsd:string .

dolce:proper_part a rdf:Property ;
	rdfs:domain :plan ;
	rdfs:range :goal_ , :objective .

:project a rdfs:Class ;
	rdfs:subClassOf :plan ;
	rdfs:label "project@en"^^xsd:string ;
	dc:description "A project is a proactively satisfied method. Additionally to a plan, a project includes at least one 'product' role to be played by some endurant (e.g. a house), or one 'result' role played by a perdurant with a definite participant (e.g. a restored state of a house)."^^xsd:string .

:practice a rdfs:Class ;
	rdfs:subClassOf :method ;
	rdfs:label "practice@en"^^xsd:string ;
	dc:description "A social method carried out explicitly or by tradition, spontaneously emerged, or moderately or strongly regulated. A practice has more relaxed constraints than a plan, and it's characterized by its adoption a agentive social object, e.g. a community."^^xsd:string .

:adopted_by a rdf:Property ;
	rdfs:domain :practice ;
	rdfs:range :agentive_social_object .

:technique a rdfs:Class ;
	rdfs:subClassOf :method ;
	rdfs:label "technique@en"^^xsd:string ;
	dc:description "A technique is a practical method to obtain some modification in the environment (or evaluation of an environment) that fulfils some task. Differently from a plan, a technique does not necessarily contains a goal or objective as a proper part."^^xsd:string .

:modal_description a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "modal-description@en"^^xsd:string ;
	dc:description "A modal description is any part of a description that has a unity criterion consisting in the specification of a modal target (some course), and it can be a right, power, duty, etc. Notice that modal descriptions can appear in conventionalized descriptions as well as in idiosyncratic assessements, narratives, promises, etc. From the formal semantic viewpoint, a modal description is the reification of a relation involving a modal logic operator."^^xsd:string .

:cognitive_modal_description a rdfs:Class ;
	rdfs:subClassOf :modal_description ;
	rdfs:label "cognitive-modal-description@en"^^xsd:string ;
	dc:description "The modal descriptions depending on some mental attitude (i.e. internally represented by a physical agent), represented here by means of a relation between roles and tasks."^^xsd:string .

:objective a rdfs:Class ;
	rdfs:subClassOf :modal_description ;
	rdfs:label "objective@en"^^xsd:string ;
	dc:description "The purpose of an agent, either physical or social. It is different from a desire or goal, because it is independent from the cognitive state of a particular physical agent. In practice, an agent (physical or social) may aim at realizing an objective even though the realizing situation conflicts with a goal-situation of the same agent. In 'private' plans of a physical agent,  realizing situations usually coincide with goal-situations. Different cases occur with plans endorsed by social agents like organizations, institutions, etc."^^xsd:string .

:desire a rdfs:Class ;
	rdfs:subClassOf :cognitive_modal_description ;
	rdfs:label "desire@en"^^xsd:string ;
	dc:description "Desires are characterized here as modal description dependent on the cognitive (or 'mental') states of an agent. It is difficult to say more than that without reusing an ontology of cognitive states.Informally: a desire is a description that involves some (possible or actual) 'desire towards' attitude by an agent, and is ultimately motivated by evolutionary features of an organism (or by built-in features if the agent is artificial), which are (or used to be) an advantage for it."^^xsd:string .

:goal_ a rdfs:Class ;
	rdfs:subClassOf :desire ;
	rdfs:label "goal@en"^^xsd:string ;
	dc:description "We are proposing here a restrictive notion of goal that relies upon its desirability by some agent, which does not necessarily play a role in the execution of the plan the goal is a part of. For example, an agent can have an attitude towards some task defined in a plan, e.g. duty towards, which is different from desiring it (desire towards). We might say that a goal is usually desired by the creator or beneficiary of a plan. The minimal constraint for a goal is that it is a proper part of a plan. For example, a desire to start a relationship can become a goal if someone decides to take action (or lets someone else take it for her sake) to obtain it. A goal is different from anobjective, because the second one is independent from the cognitive state of a particular physical agent. In practice, an agent (physical or social) may aim at realizing an objective even though the realizing situation conflicts with a goal-situation of the same agent. In 'private' plans of a physical agent,  realizing situations usually coincide with goal-situations. Different cases occur with plans endorsed by social agents like organizations, institutions, etc., which are more clearly aimed at realizing objectives."^^xsd:string .

:social_description a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "social-description@en"^^xsd:string ;
	dc:description "Examples of Social Descriptions are laws, norms, shares, peace treaties, etc., which are generically dependent on societies.Social descriptions are dependent on a community of agents."^^xsd:string .

:regulation a rdfs:Class ;
	rdfs:subClassOf :social_description ;
	rdfs:label "regulation@en"^^xsd:string ;
	dc:description "A description usually requiring a C-SAT satisfaction for a situation. Norms, codes of practice, etc. are examples."^^xsd:string .

:social_relationship a rdfs:Class ;
	rdfs:subClassOf :social_description ;
	rdfs:label "social-relationship@en"^^xsd:string ;
	dc:description "A social description defining roles for the interaction of rational agents."^^xsd:string .

:theory a rdfs:Class ;
	rdfs:subClassOf :description ;
	rdfs:label "theory@en"^^xsd:string ;
	dc:description "This is used in a wide cultural sense: a theory about something, expressed in a rather systematic way, but not necessarily public (although communicable in principle). An axiomatic theory is not a theory in this sense, although we can expect an axiomatic theory to be the formal representation of a generic theory."^^xsd:string .

:gestalt a rdfs:Class ;
	rdfs:subClassOf :theory ;
	rdfs:label "gestalt@en"^^xsd:string ;
	dc:description "A perceptual structure, from the descriptive viewpoint. In other words, this encodes the conditions by which a configuration, structure, or arrangement is perceived as a meaningful whole by a perceiving agent."^^xsd:string .

:relation_ a rdfs:Class ;
	rdfs:subClassOf :theory ;
	rdfs:label "relation@en"^^xsd:string ;
	dc:description "A non-social relation(ship): formal, linguistic, etc. It is considered here a theory, because relations are established in order to give an ordering to some reality."^^xsd:string .

:information_object a rdfs:Class ;
	rdfs:subClassOf :non_agentive_social_object ;
	rdfs:label "information-object@en"^^xsd:string ;
	dc:description "Information objects are social objects. They are realized by some entity. They are ordered (expressed according to) by some system for information encoding. Consequently, they are dependent from an encoding as well as from a concrete realization.They can express a description (the ontological equivalent of a meaning/conceptualization), can be about any entity, and can be interpreted by an agent.From a communication perspective, an information object can play the role of 'message'. From a semiotic perspective, it playes the role of 'expression'."^^xsd:string .

:ordered_by a rdf:Property ;
	rdfs:domain :information_object ;
	rdfs:range :description .

:realized_by a rdf:Property ;
	rdfs:domain :information_object ;
	rdfs:range :physical_realization .

dolce:part a rdf:Property ;
	rdfs:domain :information_object ;
	rdfs:range :information_object .

:refined_by a rdf:Property ;
	rdfs:domain :information_object ;
	rdfs:range :information_object .

:component a rdf:Property ;
	rdfs:domain dolce:particular ;
	rdfs:range dolce:particular ;
	rdfs:subPropertyOf dolce:proper_part ;
	dc:title "component@en"^^xsd:string ;
	dc:description "'Component' is a proper part with a role (or function) in a system or a context. Roles can be different for the same entity, and the evaluation of them changes according to the kind of entity. For instance, components of endurants can 'play functional roles' in a whole, while components of perdurants are the  essential 'episodes' in their whole.As a functional part relation, component is not transitive, because functions depend on intentions and/or designs, and something intentionally essential for a direct whole, can be non-essential for another, indirect whole."^^xsd:string .

:d_uses a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :figure ;
	rdfs:subPropertyOf :component ;
	dc:title "descriptive use@en"^^xsd:string ;
	dc:description "Descriptions can d-use (descriptively use) concepts or figures, provided that used ones are defined by some description."^^xsd:string .

:defines_ a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :figure ;
	rdfs:subPropertyOf :d_uses ;
	dc:title "defines@en"^^xsd:string ;
	dc:description "Descriptions define either concepts or (social) figures. Once defined, they can be d-used by other descriptions."^^xsd:string .

:optionally_uses a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :c_description ;
	rdfs:subPropertyOf :d_uses ;
	dc:title "optionally-uses@en"^^xsd:string ;
	dc:description "..."^^xsd:string .

:temporary_component a rdf:Property ;
	rdfs:domain dolce:endurant ;
	rdfs:range dolce:endurant ;
	rdfs:subPropertyOf :component ;
	dc:title "temporary_component@en"^^xsd:string ;
	dc:description "Being component at time t. It holds for endurants only. This is important to model components that can change or be lost over time without affecting the identity of the whole."^^xsd:string .

:expands a rdf:Property ;
	rdfs:domain :description ;
	rdfs:range :description ;
	rdfs:subPropertyOf dolce:proper_part ;
	dc:title "expands@en"^^xsd:string ;
	dc:description "A partial order relation that holds between descriptions. It represents the proper part relation between a description and another description featuring the same properties of the former, with at least an additional one.Descriptions can be expanded either by adding other descriptions as parts, or by refining concepts or figures that are d-used by them.Specializing the concepts or figures that are d-used by them is on the contrary a case of description specialization.For descriptions, an intention to expand must be present (unless purely formal theories are considered, but even in this case a criterion of relevance is usually active)."^^xsd:string .

:refines a rdf:Property ;
	rdfs:domain :social_object ;
	rdfs:range :social_object ;
	rdfs:subPropertyOf dolce:proper_part ;
	dc:title "refines@en"^^xsd:string ;
	dc:description "Concepts and figures can be refined by adding components, e.g. an elementary task can become complex, a complex task can increase its complexity, maximal tasks can be composed, etc.A description gets expanded if one of the concepts or figures it uses are refined.Refinement applies also to collections, situations, and information objects.Descriptions are refined by adding component descriptions."^^xsd:string .

:adopts a rdf:Property ;
	rdfs:domain :rational_agent ;
	rdfs:range :description ;
	rdfs:subPropertyOf dolce:immediate_relation ;
	dc:title "adopts@en"^^xsd:string ;
	dc:description "A relation between agents and descriptions, requiring previous creation by a rational agent, and internal representation by a physical agent, directly, or acted by some social agent. It can involve or not an actual desire to perform the possibly expected actions."^^xsd:string .

:creates a rdf:Property ;
	rdfs:domain :rational_agent ;
	rdfs:range :description ;
	rdfs:subPropertyOf dolce:immediate_relation ;
	dc:title "creates@en"^^xsd:string ;
	dc:description "An important relation between agents and descriptions is creation,  implying that a given description is *specifically* dependent on a rational agent."^^xsd:string .

:deputes a rdf:Property ;
	rdfs:domain :figure ;
	rdfs:range :role ;
	rdfs:subPropertyOf :temporary_proper_part_of ;
	dc:title "deputes@en"^^xsd:string ;
	dc:description "Figures can depute roles that are played by endurants that are supposed to 'act for' the figure."^^xsd:string .

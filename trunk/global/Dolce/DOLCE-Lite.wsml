wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-flight"
namespace { _"http://purl.org/net/wsml/dolce#",
     rdf _"http://www.w3.org/1999/02/22-rdf-syntax-ns#",
     rdfs _"http://www.w3.org/2000/01/rdf-schema#",
     dolce _"http://www.load-cnr.it/ontologies/DOLCE-Lite.owl",
     dc _"http://purl.org/dc/elements/1.1/"}

ontology DOLCE_Lite
     nfp
        dc#creator hasValue "Patrick Maué(IFGI)"
        dc#publisher hasValue "IfGI, University of Muenster"
		dc#type hasValue "Foundational Ontology"
		dc#title hasValue "DOLCE Foundational Ontology"	
		dc#description hasValue "The DOLCE and DnS ontologies. OWL engineering by Aldo Gangemi. WSML Translation by Patrick Maué"
		dc#source hasValue "http://www.loa-cnr.it/DOLCE.html"
		dc#subject hasValue "dolce, foundational"	
     endnfp

/*** 
 * CONCEPTS
 */

	 
concept abstract subConceptOf particular
	nfp
		dc#title hasValue "Abstract@en"
		dc#description hasValue  "The main characteristic of abstract entities is that  they do not have spatial nor temporal qualities, and they are not qualities themselves.  The only class of abstract entities we consider in the present version of the upper  ontology is that of quality regions (or simply regions). Quality spaces are special  kinds of quality regions, being mereological sums of all the regions related to a certain quality type. The other examples of abstract entities (sets and facts) are only  indicative."
		rdfs#seeAlso hasValue dolce#abstract 
	endnfp
	
concept abstract_quality subConceptOf quality
	nfp
		dc#title hasValue "abstract quality@en"
		dc#description hasValue "A quality inherent in a non-physical endurant"
		rdfs#seeAlso hasValue dolce#abstract\-quality
	endnfp	
//		 inherent-in some non-physical-endurant,
//        has-quality only abstract-quality,
//        q-location only abstract-region

concept abstract_region subConceptOf region 
	nfp
		dc#title hasValue "Abstract Region@en"
		dc#description hasValue "A region at which only abstract qualities can be directly located. It assumes some metrics for abstract (neither physical nor temporal) properties."
		rdfs#seeAlso hasValue dolce#abstract\-region 
	endnfp

concept achievement subConceptOf event
	nfp
		dc#title hasValue "Achievement@en"
		dc#description hasValue "Eventive occurrences (events) are called achievements  if they are atomic, otherwise they are accomplishments.Further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be seen as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (collapsing the time interval of the erosion into a time point), as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality)."
		rdfs#seeAlso hasValue dolce#achievement
	endnfp

concept accomplishment subConceptOf event
	nfp
		dc#title hasValue "Accomplishment@en"
		dc#description hasValue "Eventive occurrences (events) are called achievements if they are atomic, otherwise they are accomplishments.Further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be seen as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (collapsing the time interval of the erosion into a time point), as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality)."
		rdfs#seeAlso hasValue dolce#accomplishment
	endnfp	

concept amount_of_matter subConceptOf physical_endurant
	nfp
		dc#title hasValue "Amount of matter@en"
		dc#description hasValue "The common trait of amounts of matter is that they are endurants with no unity (according to Gangemi et a. 2001 none of them is an essential  whole). Amounts of matter - 'stuffs' referred to by mass nouns like 'gold', 'iron', 'wood',  'sand', 'meat', etc. - are mereologically  invariant, in the sense that they change their  identity when they change some parts."
		rdfs#seeAlso hasValue dolce#amount\-of\-matter
	endnfp		
	
		
concept arbitrary_sum subConceptOf endurant
	nfp
		dc#title hasValue "arbitrary sum@en"
		dc#description hasValue "AKA arbitrary-collection.The mereological sum of any two or more endurants (physical or not). Arbitrary sums have no unity criterion (they are 'extensional')."
		rdfs#seeAlso hasValue dolce#arbitrary\-sum
	endnfp
// part some endurant
	
concept dependent_place subConceptOf feature
	nfp
		dc#title hasValue "Dependent Place@en"
		dc#description hasValue "A feature that is not part of its host, like a hole in a piece of cheese, the underneath of a table, the front of a house, or the shadow of a tree."
		rdfs#seeAlso hasValue dolce#dependent\-place
	endnfp
	
	
concept event subConceptOf perdurant
	nfp
		dc#title hasValue "Event@en"
		dc#description hasValue "An occurrence-type is stative or eventive according  to whether it holds of the mereological sum of two of its instances, i.e. if it is cumulative or not. A sitting occurrence is stative since the sum of two sittings is still a sitting occurrence.In general, events differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion.On the other hand, at any time, one can conceive a description that asserts the constraints by which an event of a certian type is such, and in this case, it becomes a situation.Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align an event-oriented class. For example, in the WordNet alignment, we have decided to put only some physical events under 'event', e.g. 'discharge', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive discharge events, these will be put under 'situation'.Similar considerations are made for the other types of perdurants in DOLCE.A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality).If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation."
		rdfs#seeAlso hasValue dolce#event
	endnfp		
		
concept feature subConceptOf physical_endurant
	nfp
		dc#title hasValue "Feature@en"
		dc#description hasValue "Features are 'parasitic entities', that exist insofar their host exists. Typical examples of features are holes, bumps, boundaries, or spots of color. Features may be relevant parts of their host, like a bump or an edge, or dependent regions like a hole in a piece of cheese, the underneath of a table, the front of a house, or the shadow of a tree, which are not parts of their host. All features are essential wholes, but no common unity criterion may exist for all of them. However, typical features have a topological unity, as they are singular entities.Here only features of physical endurants are considered."
		rdfs#seeAlso hasValue dolce#feature
	endnfp		


	
concept non_physical_endurant subConceptOf endurant
	nfp
		dc#title hasValue "Non-physical Endurant@en"
		dc#description hasValue "An endurant with no mass, generically constantly depending on some agent. Non-physical endurants can have physical constituents (e.g. in the case of members of a collection)."
		rdfs#seeAlso hasValue dolce#non\-physical\-endurant
	endnfp		
	has_quality ofType abstract_quality
	part ofType non_physical_endurant
	
	
concept non_physical_object subConceptOf  non_physical_endurant
	nfp
		dc#title hasValue "Non-Physical Object@en"
		dc#description hasValue "Formerly known as description. A unitary endurant with no mass (non-physical), generically constantly depending on some agent, on some communication act, and indirectly on some agent participating in that act. Both descriptions (in the now current sense) and concepts are non-physical objects."
		rdfs#seeAlso hasValue dolce#non\-physical\-object
	endnfp		
	generically_dependent_on ofType physical_endurant
//	part only non-physical-object
		
				
concept particular
	nfp
		dc#title hasValue "Particular@en"
		dc#description hasValue  "AKA 'entity'.Any individual in the DOLCE domain of discourse. The extensional coverage of DOLCE is as large as possible, since it ranges on 'possibilia', i.e all possible individuals that can be postulated by means of DOLCE axioms. Possibilia include physical objects, substances, processes, qualities,  conceptual regions, non-physical objects, collections and even arbitrary sums of objects.The class 'particular' features a covering partition that includes: endurant, perdurant, quality, and abstract. There are also some subclasses defined as unions of subclasses of 'particular' for special purposes: spatio-temporal-particular (any particular except abstracts)- physical-realization (any realization of an information object, defined in the ExtendedDnS ontology)."
		rdfs#seeAlso hasValue dolce#particular 
	endnfp
// disjoint with: perdurant, quality, endurant

concept perdurant subConceptOf spatio_temporal_particular
	nfp
		dc#title hasValue "Perdurant@en"
		dc#description hasValue "Perdurants (AKA occurrences) comprise what are variously called events, processes, phenomena, activities and states. They can have temporal parts or spatial parts. For instance, the first movement of (an execution of) a symphony is a temporal part of the symphony. On the other hand, the play performed by the left side of the orchestra is a spatial part. In both cases, these parts are occurrences themselves. We assume that objects cannot be parts of occurrences, but rather they participate in them. Perdurants extend in time by accumulating different temporal parts, so that, at any time they are present, they are only partially present, in  the sense that some of their proper temporal parts (e.g., their previous or future phases) may be not present. E.g., the piece of paper you are reading now is wholly present, while some temporal parts of your reading are not present yet, or any more. Philosophers say that endurants are entities that are in time, while lacking temporal parts (so to speak, all their parts flow with them in time). Perdurants, on the contrary, are entities that happen in time, and can have temporal parts (all their parts are fixed in time)."
		rdfs#seeAlso hasValue dolce#perdurant
	endnfp
	has_quality ofType temporal_location_q
	participant ofType endurant
	part ofType perdurant
	
concept physical_object subConceptOf physical_endurant
	nfp
		dc#title hasValue "physical object@en"
		dc#description hasValue "The main characteristic of physical objects is that  they are endurants with unity. However, they have no common unity criterion, since  different subtypes of objects may  have different unity criteria. Differently from  aggregates, (most) physical objects change some of their parts while keeping their  identity, they can have therefore temporary parts. Often physical objects (indeed,  all endurants) are ontologically independent from occurrences (discussed below).  However, if we admit that every object has a life, it is hard to exclude a mutual  specific constant dependence between the two. Nevertheless, we may still use the  notion of dependence to (weakly) characterize objects as being not specifically  constantly dependent on other objects."
		rdfs#seeAlso hasValue dolce#physical\-object
	endnfp	
		

concept physical_endurant subConceptOf spatio_temporal_region
	nfp
		dc#title hasValue "Physical Endurant@en"
		dc#description hasValue "An endurant having a direct physical (at least spatial) quality."
		rdfs#seeAlso hasValue dolce#physical\-endurant
	endnfp	
	
concept physical_quality subConceptOf quality
	nfp
		dc#title hasValue "Physical Quality@en"
		dc#description hasValue "A quality inherent in a physical endurant."
		rdfs#seeAlso hasValue dolce#physical\-quality
	endnfp	

	
	
concept process subConceptOf stative
	nfp
		dc#title hasValue "Process@en"
		dc#description hasValue "Within stative occurrences, we distinguish between states and processes     according to homeomericity: sitting is classified as a state but running     is classified as a process, since there are (very short) temporal parts of     a running that are not themselves runnings. In general, processes differ     from situations because they are not assumed to have a description from     which they depend. They can be sequenced by some course, but they do not     require a description as a unifying criterion. On the other hand, at any     time, one can conceive a description that asserts the constraints by which     a process of a certian type is such, and in this case, it becomes a     situation. Since the decision of designing an explicit description that     unifies a perdurant depends on context, task, interest, application, etc.,     when aligning an ontology do DLP, there can be indecision on where to     align a process-oriented class. For example, in the WordNet alignment, we     have decided to put only some physical processes under 'process', e.g.     'organic process', in order to stress the social orientedness of DLP. But     whereas we need to talk explicitly of the criteria by which we conceive     organic processes, these will be put under 'situation'. Similar     considerations are made for the other types of perdurants in DOLCE. A     different notion of event (dealing with change) is currently investigated     for further developments: being 'achievement', 'accomplishment', 'state',     'event', etc. can be also considered 'aspects' of processes or of parts of     them. For example, the same process 'rock erosion in the Sinni valley' can     be conceptualized as an accomplishment (what has brought the current state     that e.g. we are trying to explain), as an achievement (the erosion     process as the result of a previous accomplishment), as a state (if we     collapse the time interval of the erosion into a time point), or as an     event (what has changed our focus from a state to another). In the erosion     case, we could have good motivations to shift from one aspect to another:     a) causation focus, b) effectual focus, c) condensation d) transition     (causality). If we want to consider all the aspects of a process together,     we need to postulate a unifying descriptive set of criteria (i.e. a     'description'), according to which that process is circumstantiated in a     'situation'. The different aspects will arise as a parts of a same situation."
		rdfs#seeAlso hasValue dolce#process 
	endnfp
	

		
concept proposition subConceptOf abstract
	nfp
		dc#title hasValue "Proposition@en"
		dc#description hasValue  "The abstract content of a proposition. Abstract content is purely combinatorial: from this viewpoint, any content that can be generated by means of combinatorial rules is assumed to exist in the domain of quantification (reified abstracts)."
		rdfs#seeAlso hasValue dolce#proposition 
	endnfp
	 

	
concept quale subConceptOf region
	nfp
		dc#title hasValue "Quale@en"
		dc#description hasValue "An atomic region."
		rdfs#seeAlso hasValue dolce#region 
	endnfp
	part ofType abstract_region 
	
concept quality subConceptOf spatio_temporal_particular
	nfp
		dc#title hasValue "Quality@en"
		dc#description hasValue "Qualities can be seen as the basic entities we can  perceive or measure: shapes, colors, sizes, sounds, smells, as well as weights, lengths,  electrical charges... 'Quality' is often used as a synonymous of 'property', but this is  not the case in this upper ontology: qualities are particulars, properties are universals.  Qualities inhere to entities: every entity (including qualities themselves) comes with  certain qualities, which exist as long as the entity exists."
		rdfs#seeAlso hasValue dolce#quality
	endnfp		
	
		
concept quality_space subConceptOf region
	nfp
		dc#title hasValue "Quality Space@en"
		dc#description hasValue "A quality space is a topologically maximal region. The constraint of maximality cannot be given completely in OWL, but a constraint is given that creates a partition out of all quality spaces (e.g. no two quality spaces can overlap mereologically)."
		rdfs#seeAlso hasValue dolce#quality\-space 
	endnfp
	
		   
concept region subConceptOf abstract
	nfp
		dc#title hasValue "Region@en"
		dc#description hasValue  "We distinguish between a quality (e.g., the color  of a specific rose), and its value (e.g., a particular shade of red). The latter  is called quale, and describes the position of an individual quality within a certain  conceptual space (called here quality space) Gardenfors (2000). So when we say that  two roses have (exactly) the same color, we mean that their color qualities, which  are distinct, have the same position in the color space, that is they have the same  color quale."
		rdfs#seeAlso hasValue dolce#region 
	endnfp
	part impliesType region

concept relevant_part subConceptOf feature
	nfp
		dc#title hasValue "Relevant Part@en"
		dc#description hasValue  "Features that are relevant parts of their host, like a bump or an edge."
		rdfs#seeAlso hasValue dolce#relevant\-part 
	endnfp 

concept set subConceptOf abstract
	nfp
		dc#title hasValue "Set@en"
		dc#description hasValue  "A mathematical set."
		rdfs#seeAlso hasValue dolce#set   
	endnfp 		
	
concept spatio_temporal_particular subConceptOf particular
	nfp
		dc#title hasValue "Spatiotemporal Particular@en"
		dc#description hasValue "Dummy class for optimizing some property universes. It includes all entities that are not reifications of universals ('abstracts'), i.e. those entities that are in space-time."
		rdfs#seeAlso hasValue dolce#spatio\-temporal\-particular
	endnfp

concept space_region subConceptOf physical_region
	nfp
		dc#title hasValue "Space Region@en"
		dc#description hasValue "An ordinary space: geographical, cosmological, anatomical, topographic, etc."
		rdfs#seeAlso hasValue dolce#space\-region
	endnfp		
//        part only space-region,
//        q-location-of only spatial-location_q	
		
concept spatial_location_q subConceptOf quality
	nfp
		dc#title hasValue "Spatio Location Quality@en"
		dc#description hasValue "A physical quality, q-located in (whose value is given within) ordinary spaces (geographical coordinates, cosmological positions, anatomical axes, etc.)."
		rdfs#seeAlso hasValue dolce#spatial\-location_q
	endnfp	

concept spatio_temporal_region subConceptOf space_region
	nfp
		dc#title hasValue "spatio temporal region@en"
		dc#description hasValue "Any region resulting from the composition of a space region with a temporal region, i.e. being present in region r at time t."
		rdfs#seeAlso hasValue dolce#spatio\-temporal\-region 
	endnfp	
								
concept stative subConceptOf perdurant
	nfp
		dc#title hasValue "stative@en"
		dc#description hasValue "An occurrence-type is stative or eventive according  to whether it holds of the mereological sum of two of its instances, i.e. if it is  cumulative or not. A sitting occurrence is stative since the sum of two sittings  is still a sitting occurrence."
		rdfs#seeAlso hasValue dolce#stative 
	endnfp	
	
concept state subConceptOf stative
	nfp
		dc#title hasValue "state@en"
		dc#description hasValue "Within stative occurrences, we distinguish between  states and processes according to homeomericity: sitting is classified as a state  but running is classified as a process, since there are (very short) temporal parts  of a running that are not themselves runnings.In general, states differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion.On the other hand, at any time, one can conceive a description that asserts the constraints by which a state of a certian type is such, and in this case, it becomes a situation.Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align a state-oriented class. For example, in the WordNet alignment, we have decided to put only some physical states under 'state', e.g. 'turgor', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive turgor states, these will be put under 'situation'.Similar considerations are made for the other types of perdurants in DOLCE.A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality).If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation."
		rdfs#seeAlso hasValue dolce#state 
	endnfp	
			
concept temporal_quality subConceptOf quality
	nfp
		dc#title hasValue "Temporal Quality@en"
		dc#description hasValue "A quality inherent in a perdurant."
		rdfs#seeAlso hasValue dolce#temporal\-quality
	endnfp	

concept temporal_location_q subConceptOf quality
	nfp
		dc#title hasValue "temporal location quality@en"
		dc#description hasValue "A temporal location quality."
		rdfs#seeAlso hasValue dolce#temporal\-location_q
	endnfp	
			
concept temporal_region subConceptOf region
	nfp
		dc#title hasValue "Temporal Region@en"
		dc#description hasValue "A region at which only temporal qualities can be  directly located. It assumes a metrics for time."
		rdfs#seeAlso hasValue dolce#temporal\-region 
	endnfp
	part ofType temporal_region
	q_location_of ofType temporal_quality


/*** 
 * RELATIONS  
 */


relation immediate_relation(ofType particular, ofType particular)
	nfp
		dc#title hasValue "Immediate Relation@en"
		dc#description hasValue "A relation that holds without additional mediating individuals. In logical terms, a non-composed relation."
		rdfs#seeAlso hasValue dolce#immediate\-relation	
	endnfp
	
relation immediate_relation_i(ofType particular, ofType particular)
	nfp
		dc#title hasValue "Immediate Relation Inverse@en"
		dc#description hasValue "A relation that holds without additional mediating individuals. In logical terms, a non-composed relation."
		rdfs#seeAlso hasValue dolce#immediate\-relation\-i	
	endnfp
	
relation mediated_relation(ofType particular, ofType particular)
	nfp
		dc#title hasValue "Mediated Relation@en"
		dc#description hasValue "A relation that composes other  relations. For example, a participation relation composed with a representation relation.Composed relation cannot be directly expressed in OWL-DL, then (at least some) compositions are expressed as class or restriction axioms."
		rdfs#seeAlso hasValue dolce#mediated\-relation
	endnfp
	
relation mediated_relation_i(ofType particular, ofType particular)   
	nfp
		dc#title hasValue "Immediate Relation Inverse@en"
		dc#description hasValue "A relation that composes other  relations. For example, a participation relation composed with a representation relation.Composed relation cannot be directly expressed in OWL-DL, then (at least some) compositions are expressed as class or restriction axioms."
		rdfs#seeAlso hasValue dolce#mediated\-relation\-i
	endnfp
	
relation generic_constituent (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "Generic Constituent@en"
		dc#description hasValue "'Constituent' should depend on some layering of  the ontology. For example, scientific granularities or ontological 'strata' are  typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."
		rdfs#seeAlso hasValue dolce#generic\-constituent
	endnfp
	
relation generic_constituent_of (ofType particular, ofType particular)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "Generic Constituent Of@en"
		dc#description hasValue "'Constituent' should depend on some layering of  the ontology. For example, scientific granularities or ontological 'strata' are  typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."
		rdfs#seeAlso hasValue dolce#generic\-constituent\-of
	endnfp
	
relation generic_dependent (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "generic dependent of@en"
		dc#description hasValue "The dependence on an individual of a given type at some time. This is traditionally a relation between particulars and universals, but this one states that x generically depends on y if a z different from y, but with the same properties, can be equivalently its depend-on.This is a temporally-indexed relation (embedded in this syntax)."
		rdfs#seeAlso hasValue dolce#generic\-dependent
	endnfp
	
	
	
relation identitiy_c (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "is identitical to (Ontologically)@en"
		dc#description hasValue "Any pair of individuals are ontologically identical if they are identical to themselves. Reflexive, symmetric, and transitive."
		rdfs#seeAlso hasValue dolce#identitiy\-c
	endnfp
	
relation identitiy_n (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "is identitical to (notionally)@en"
		dc#description hasValue "Any pair of individuals are notionally identical iff they instantiate all and only the same concepts."
		rdfs#seeAlso hasValue dolce#identitiy\-n
	endnfp
	
relation inherent_in (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "inherent in @en"
		dc#description hasValue "The immediate relation holding for qualities and entities."
		rdfs#seeAlso hasValue dolce#inherent\-in
	endnfp
	
relation has_quality (ofType particular, ofType quality)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "has quality@en"
		dc#description hasValue "The immediate relation holding for qualities and entities."
		rdfs#seeAlso hasValue dolce#has\-quality
	endnfp
	
relation t_inherent_in (ofType quality, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "Generic Dependent@en"
		dc#description hasValue "The immediate relation holding for qualities and entities at time t."
		rdfs#seeAlso hasValue dolce#t\-inherent\-in
	endnfp
	
relation has_t_quality	(ofType particular, ofType quality) subRelationOf has_quality
	nfp
		dc#title hasValue "has temporal quality@en"
		dc#description hasValue "The immediate relation holding for qualities and entities at time t."
		rdfs#seeAlso hasValue dolce#has\-t\-quality
	endnfp
	
relation part (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "has part@en"
		dc#description hasValue "The most generic part relation, reflexive, asymmetric, and transitive."
		rdfs#seeAlso hasValue dolce#part
	endnfp
	
relation part_of(ofType particular, ofType particular)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "is part of@en"
		dc#description hasValue "The most generic part relation, reflexive, asymmetric, and transitive."
		rdfs#seeAlso hasValue dolce#part\-of
	endnfp
	
		
relation atomic_part (ofType particular, ofType particular)  subRelationOf part
	nfp
		dc#title hasValue "has atomic part@en"
		dc#description hasValue "The part relation between a particular and an atom."
		rdfs#seeAlso hasValue dolce#atomic\-part
	endnfp
	
relation atomic_part_of (ofType particular, ofType particular)  subRelationOf part_of
	nfp
		dc#title hasValue "is atomic part of@en"
		dc#description hasValue "The part relation between a particular and an atom."
		rdfs#seeAlso hasValue dolce#atomic\-_part\-of
	endnfp
	
relation proper_part (ofType particular, ofType particular)  subRelationOf part
	nfp
		dc#title hasValue "has proper part@en"
		dc#description hasValue "The proper part relation: irreflexive, antisymmetric, and transitive."
		rdfs#seeAlso hasValue dolce#proper\-part
	endnfp
		
relation proper_part_of (ofType particular, ofType particular)  subRelationOf part_of
	nfp
		dc#title hasValue "is proper part of@en"
		dc#description hasValue "The proper part relation: irreflexive, antisymmetric, and transitive."
		rdfs#seeAlso hasValue dolce#proper\-part\-of
	endnfp
	
relation boundary (ofType particular, ofType particular)  subRelationOf proper_part
	nfp
		dc#title hasValue "has boundary@en"
		dc#description hasValue ""
		rdfs#seeAlso hasValue dolce#boundary
	endnfp
	
relation boundary_of (ofType particular, ofType particular)  subRelationOf proper_part_of
	nfp
		dc#title hasValue "is boundary of@en"
		dc#description hasValue ""
		rdfs#seeAlso hasValue dolce#boundary\-of
	endnfp
	
relation temporary_proper_part (ofType endurant, ofType endurant)  subRelationOf proper_part
	nfp
		dc#title hasValue "has proper part at time t@en"
		dc#description hasValue "Being proper part at time t. It holds for endurants only. This is important to model proper parts that can change or be lost over time without affecting the identity of the whole."
		rdfs#seeAlso hasValue dolce#temporary\-proper\-part
	endnfp
	
relation temporary_proper_part_of (ofType endurant, ofType endurant)  subRelationOf proper_part_of
	nfp
		dc#title hasValue "is proper part at time t of@en"
		dc#description hasValue "Being proper part at time t. It holds for endurants only. This is important to model proper parts that can change or be lost over time without affecting the identity of the whole."
		rdfs#seeAlso hasValue dolce#temporary\-proper\-part\-of
	endnfp
	
	
axiom define_inverse 
	definedBy
		immediate_relation(?x,?y) implies immediate_relation_i(?y,?x).
		mediated_relation(?x,?y) implies mediated_relation_i(?y,?x).	
		generic_constituent(?x,?y) implies generic_constituent_of(?y,?x).
		generic_dependent(?x,?y) implies generic_dependent_on(?y,?x).
		identitiy_c(?x,?y) implies identitiy_c(?y,?x).
		identitiy_n(?x,?y) implies identitiy_n(?y,?x).
		sibling_part(?x,?y) implies sibling_part(?y,?x).
		inherent_in(?x,?y) implies has_quality(?y,?x).
		t_inherent_in(?x,?y) implies has_t_quality(?y,?x).
		part(?x,?y) implies part_of(?y,?x).		
		atomic_part(?x,?y) implies atomic_part_of(?y,?x).		
		proper_part(?x,?y) implies proper_part_of(?y,?x).		
		boundary(?x,?y) implies boundary_of(?y,?x).		
		temporary_proper_part(?x,?y) implies temporary_proper_part_of(?y,?x).		
		// to be added if needed

	
	
relation temporary_part (ofType endurant, ofType endurant)  subRelationOf part
	nfp
		dc#title hasValue "temporary part@en"
		dc#description hasValue "Being part at time t. It holds for endurants only. This is important to model parts that can change or be lost over time without affecting the identity of the whole. In FOL, this is expressed as a ternary relation, but in DLs we only can reason with binary relations, then only the necessary axiom of compresence is represented here."
		rdfs#seeAlso hasValue dolce#temporary_part
	endnfp
		
relation temporary_part_of (ofType endurant, ofType endurant)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "temporary part of@en"
		dc#description hasValue "sss"
		rdfs#seeAlso hasValue dolce#temporary_part_of
	endnfp
	
	
relation constant_participant (ofType perdurant, ofType endurant)  subRelationOf participant
	nfp
		dc#title hasValue "constant participant in@en"
		dc#description hasValue "Anytime x is present, x has participant y. In other words, all parts of x have a same participant.Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president')."
		rdfs#seeAlso hasValue dolce#constant_participant
	endnfp
		
relation constant_participant_in (ofType endurant, ofType particular)  subRelationOf participant_in
	nfp
		dc#title hasValue "Generic Dependent@en"
		dc#description hasValue "Anytime x is present, x has participant y. In other words, all parts of x have a same participant.Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president')."
		rdfs#seeAlso hasValue dolce#constant_participant_in
	endnfp
	
relation specific_constant_dependent (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "specific constant dependent@en"
		dc#description hasValue "The constant dependence between two individuals. Taken here as primitive."
		rdfs#seeAlso hasValue dolce#specific_constant_dependent
	endnfp
	
relation specifically_constantly_dependent_on (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "specifically constantly dependent on@en"
		dc#description hasValue "The constant dependence between two individuals. Taken here as primitive."
		rdfs#seeAlso hasValue dolce#specifically_constantly_dependent_on
	endnfp
	
relation temporary_participant_in (ofType endurant, ofType perdurant)  subRelationOf participant_in
	nfp
		dc#title hasValue "temporary participant in@en"
		dc#description hasValue "x participates in some of y's parts."
		rdfs#seeAlso hasValue dolce#temporary_participant_in
	endnfp
		
relation temporary_participant (ofType perdurant, ofType endurant)  subRelationOf participant
	nfp
		dc#title hasValue "temporary participant@en"
		dc#description hasValue "Only some parts of the perdurant p have a participant e.In fact, participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').Implicitly, this relation has a temporal indexing.If needed, in OWL one can derive such indexing by expliciting what parts of p have e as _constant_ participant.An appropriate OWL axiom is created to bind this relation to a proper part of it, which has the temporary_participant as a constant one."
		rdfs#seeAlso hasValue dolce#temporary_participant
	endnfp
	
relation host_of (ofType physical_endurant, ofType feature)  subRelationOf specific_constant_dependent
	nfp
		dc#title hasValue "is host of@en"
		dc#description hasValue "The immediate relation holding for features and entities."
		rdfs#seeAlso hasValue dolce#host_of
	endnfp
		
relation host (ofType feature, ofType physical_endurant)  subRelationOf specifically_constantly_dependent_on
	nfp
		dc#title hasValue "hosts@en"
		dc#description hasValue "The immediate relation holding for features and entities."
		rdfs#seeAlso hasValue dolce#host
	endnfp
	
relation specific_constant_constituent_of (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "specific constant constituent of@en"
		dc#description hasValue "'Constituent' should depend on some layering of  the ontology. For example, scientific granularities or ontological 'strata' are  typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."
		rdfs#seeAlso hasValue dolce#specific_constant_constituent_of
	endnfp
	
relation specific_constant_constituent (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "specific constant constituent@en"
		dc#description hasValue "'Constituent' should depend on some layering of  the ontology. For example, scientific granularities or ontological 'strata' are  typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."
		rdfs#seeAlso hasValue dolce#specific_constant_constituent
	endnfp
	
relation weak_connection (ofType particular, ofType particular)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "weak connection@en"
		dc#description hasValue "he basic connection, not requiring a  common boundary."
		rdfs#seeAlso hasValue dolce#weak_connection
	endnfp
	
	
relation r_location_of (ofType region, ofType region)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "is location of@en"
		dc#description hasValue "A relation for representing regions within other regions, e.g. in measurement spaces (space composition).The result of r_location composition is a new 'composed region', which can either preserve the same region type (e.g. physical+physical_>physical, or  physical+abstract_>physical), or not (e.g. physical+abstract_>abstract). See 'composition description' for more details.In some cases, space composition is conventional, i.e. a space is just 'located' at another space, as in the case of measurement spaces:(direct composition):   r r_location r1In other cases, r_location implies a complex path, e.g. :(homogeneous composition):   r q_location_of q inherent_in x has_quality q1 q_location r1(heterogeneous composition across endurants and perdurants):   r q_location_of q inherent_in e participant_in p has_quality q1 q_location r1(heterogeneous composition across physical and non_physical endurants):   r q_location_of q inherent_in pe specific_constant_dependent npe has_quality q1 q_location r1"
		rdfs#seeAlso hasValue dolce#weak_connection
	endnfp
	
relation r_location (ofType region, ofType region)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "has location@en"
		dc#description hasValue "A relation for representing regions within other regions, e.g. in measurement spaces (space composition).The result of r_location composition is a new 'composed region', which can either preserve the same region type (e.g. physical+physical_>physical, or  physical+abstract_>physical), or not (e.g. physical+abstract_>abstract). See 'composition description' for more details.In some cases, space composition is conventional, i.e. a space is just 'located' at another space, as in the case of measurement spaces:(direct composition):  r r_location r1.  In other cases, r_location implies a complex path, e.g. :(homogeneous composition):   r q_location_of q inherent_in x has_quality q1 q_location r1(heterogeneous composition across endurants and perdurants):   r q_location_of q inherent_in e participant_in p has_quality q1 q_location r1(heterogeneous composition across physical and non_physical endurants):   r q_location_of q inherent_in pe specific_constant_dependent npe has_quality q1 q_location r1"
		rdfs#seeAlso hasValue dolce#r_location
	endnfp
	
relation quale_of (ofType quale, ofType quality)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "is quale of@en"
		dc#description hasValue "A quality having a q_location at an atomic region."
		rdfs#seeAlso hasValue dolce#quale_of
	endnfp
	
relation has_quale (ofType quality, ofType quale)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "has quale@en"
		dc#description hasValue "A quality having a q_location at an atomic region."
		rdfs#seeAlso hasValue dolce#has_quale
	endnfp
	
relation total_temporary_participant (ofType perdurant, ofType endurant)  subRelationOf temporary_participant
	nfp
		dc#title hasValue "total temporary participant@en"
		dc#description hasValue "The perdurant p has a participant e that temporarily participates in p with all its parts, e.g. in 'I played the concert' (where I actually played just an ouverture).See also 'temporary_participant'."
		rdfs#seeAlso hasValue dolce#total_temporary_participant
	endnfp
	
relation total_temporary_participant_in (ofType endurant, ofType perdurant)  subRelationOf temporary_participant_in
	nfp
		dc#title hasValue "total_temporary_participant_in@en"
		dc#description hasValue "The perdurant p has a participant e that temporarily participates in p with all its parts, e.g. in 'I played the concert' (where I actually played just an ouverture).See also 'temporary_participant'."
		rdfs#seeAlso hasValue dolce#total_temporary_participant_in
	endnfp
	
relation generically_dependent_on (ofType particular, ofType particular)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "generically dependent on@en"
		dc#description hasValue "sss"
		rdfs#seeAlso hasValue dolce#generically_dependent_on
	endnfp
	
relation q_present_at (ofType physical_quality, ofType time_interval)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "q_present_at@en"
		dc#description hasValue "Presence of a physical quality when inheres in  an endurant."
		rdfs#seeAlso hasValue dolce#q_present_at
	endnfp 
	
relation time_of_q_presence_of (ofType time_interval, ofType physical_quality)  subRelationOf mediated_relation_i
	nfp
		dc#title hasValue "time_of_q_presence_of@en"
		dc#description hasValue "Presence of a physical quality when inheres in  an endurant."
		rdfs#seeAlso hasValue dolce#time_of_q_presence_of
	endnfp
	
relation mereologically_coincides (ofType endurant, ofType endurant)  subRelationOf temporary_part
	nfp
		dc#title hasValue "mereologically_coincides@en"
		dc#description hasValue "Having the same parts at time t."
		rdfs#seeAlso hasValue dolce#mereologically_coincides
	endnfp
	
relation participant (ofType perdurant, ofType endurant)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "participant@en"
		dc#description hasValue "The immediate relation holding between endurants and perdurants (e.g. in 'the car is running').Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').A 'functional' participant is specialized for those forms of participation that depend on the nature of participants, processes, or on the intentionality of agentive participants. Traditional 'thematic role' should be mapped to functional participation.For relations holding between participants in a same perdurant, see the co_participates relation."
		rdfs#seeAlso hasValue dolce#participant
	endnfp
	
relation participant_in (ofType endurant, ofType perdurant)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "participant in@en"
		dc#description hasValue "The immediate relation holding between endurants and perdurants (e.g. in 'the car is running').Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').A 'functional' participant is specialized for those forms of participation that depend on the nature of participants, processes, or on the intentionality of agentive participants. Traditional 'thematic role' should be mapped to functional participation.For relations holding between participants in a same perdurant, see the co_participates relation."
		rdfs#seeAlso hasValue dolce#participant_in
	endnfp
	
relation life (ofType particular, ofType particular)  subRelationOf constant_participant_in
	nfp
		dc#title hasValue "life@en"
		dc#description hasValue "Total constant participation applied to the mereological sum of the perdurants in which an endurant participates."
		rdfs#seeAlso hasValue dolce#life
	endnfp
	
relation life_of (ofType perdurant, ofType endurant)  subRelationOf constant_participant
	nfp
		dc#title hasValue "life of@en"
		dc#description hasValue "Total constant participation applied to the mereological sum of the perdurants in which an endurant participates."
		rdfs#seeAlso hasValue dolce#life\-of
	endnfp
	
relation partly_compresent (ofType particular, ofType particular)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "partly compresent@en"
		dc#description hasValue "A composed (mediated) relation used here to make relations 'temporary': by adding it as a superrelation, the effect is that the two related endurants cannot be present at all the same time intervals, but are compresent at least at some time interval (see related axiom).In FOL, the same constraint can be stated directly by coreference.This workaround can be used to index time of relations that involve reciprocal dependency, but it cannot be used in general with relations involving multiple strata of reality. For example, _about_ relation can be temporally indexed, without involving that the time of the information object overlaps with the time of the entity the information is about (but this works for e.g. the _realizes_ relation between information objects and entities whatsoever). The different temporal constraints of about vs. expresses probably derive from the dependency of aboutness from conception (to be about x, an information object should also express a description d that is satisfied by a situation including x, then temporal overlapping of _about_ is true in virtue of d). On the other hand, even conceives cannot be indexed in this way, because overlapping does not hold between the time og the conceiving agent, and the conceived description (or situation)."
		rdfs#seeAlso hasValue dolce#partly_compresent
	endnfp
	
relation abstract_location_of (ofType abstract_region, ofType non_physical_endurant)  subRelationOf exact_location_of
	nfp
		dc#title hasValue "abstract location of@en"
		dc#description hasValue "Analytical location holding between non_physical endurants and abstract regions."
		rdfs#seeAlso hasValue dolce#abstract_location_of
	endnfp
	
relation abstract_location (ofType non_physical_endurant, ofType abstract_region)  subRelationOf exact_location
	nfp
		dc#title hasValue "abstract location@en"
		dc#description hasValue "Analytical location holding between non_physical endurants and abstract regions."
		rdfs#seeAlso hasValue dolce#abstract_location
	endnfp
	
relation generic_location_of (ofType particular, ofType particular)  subRelationOf mediated_relation_i
	nfp
		dc#title hasValue "generic location of@en"
		dc#description hasValue "The most generic location relation, probably equivalent to more than one image schema in a cognitive system (e.g. containment for exact location, proximity for approximate location).This is meant to reason on generalized, common sense as well as formal locations, including naive localization, between any kinds of entities. Generic location is branched into 'exact' location, ranging on regions, and 'approximate' (naive) location, ranging on non_regions."
		rdfs#seeAlso hasValue dolce#generic_location_of
	endnfp
	
relation generic_location (ofType particular, ofType particular)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "generic_location@en"
		dc#description hasValue "The most generic location relation, probably equivalent to more than one image schema in a cognitive system (e.g. containment for exact location, proximity for approximate location).This is meant to reason on generalized, common sense as well as formal locations, including naive localization, between any kinds of entities. Generic location is branched into 'exact' location, ranging on regions, and 'approximate' (naive) location, ranging on non_regions."
		rdfs#seeAlso hasValue dolce#generic_location
	endnfp	
	
	
relation physical_location (ofType physical_endurant, ofType physical_region)  subRelationOf exact_location
	nfp
		dc#title hasValue "physical_location@en"
		dc#description hasValue "Analytical location holding between physical endurants and physical regions."
		rdfs#seeAlso hasValue dolce#mediated_relation_i
	endnfp
	
relation physical_location_of (ofType physical_region, ofType physical_endurant)  subRelationOf exact_location_of
	nfp
		dc#title hasValue "physical_location_of@en"
		dc#description hasValue "Analytical location holding between physical endurants and physical regions."
		rdfs#seeAlso hasValue dolce#physical_location_of
	endnfp
	
relation q_location_of (ofType region, ofType quality)  subRelationOf immediate_relation_i
	nfp
		dc#title hasValue "q_location_of@en"
		dc#description hasValue "The immediate relation holding for qualities and regions. See 'generic location' branching for the various mediated relations that embed q_location."
		rdfs#seeAlso hasValue dolce#q_location_of
	endnfp
	
relation q_location  (ofType quality, ofType region)  subRelationOf immediate_relation
	nfp
		dc#title hasValue "q_location@en"
		dc#description hasValue "The immediate relation holding for qualities and regions. See 'generic location' branching for the various mediated relations that embed q_location."
		rdfs#seeAlso hasValue dolce#q_location
	endnfp
	
relation total_constant_participant (ofType perdurant, ofType endurant)  subRelationOf constant_participant
	nfp
		dc#title hasValue "total_constant_participant@en"
		dc#description hasValue "The perdurant p has a participant e that constantly participates in p with all its parts, e.g. in 'I played the concert' (where the concert is a solo concert)."
		rdfs#seeAlso hasValue dolce#total_constant_participant
	endnfp	
	
relation total_constant_participant_in (ofType endurant, ofType perdurant)  subRelationOf constant_participant_in
	nfp
		dc#title hasValue "total_constant_participant_in@en"
		dc#description hasValue "The perdurant p has a participant e that constantly participates in p with all its parts, e.g. in 'I played the concert' (where the concert is a solo concert)."
		rdfs#seeAlso hasValue dolce#total_constant_participant_in
	endnfp
	
relation sibling_part (ofType particular, ofType particular)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "sibling part@en"
		dc#description hasValue "Mereological sibling: having a common whole"
		rdfs#seeAlso hasValue dolce#sibling_part
	endnfp
	
relation spatio_temporally_present_at (ofType particular, ofType spatio_temporal_region)  subRelationOf exact_location
	nfp
		dc#title hasValue "spatio_temporally_present_at@en"
		dc#description hasValue ""
		rdfs#seeAlso hasValue dolce#spatio_temporally_present_at
	endnfp
	
relation spatio_temporal_presence_of (ofType spatio_temporal_region, ofType particular)  subRelationOf exact_location_of
	nfp
		dc#title hasValue "spatio_temporal_presence_of@en"
		dc#description hasValue ""
		rdfs#seeAlso hasValue dolce#spatio_temporal_presence_of
	endnfp
	
relation strong_connection (ofType particular, ofType particular)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "strong_connection@en"
		dc#description hasValue "By strong connection here we mean a connection between  two entities that share a boundary."
		rdfs#seeAlso hasValue dolce#strong_connection
	endnfp	
	 
relation exact_location_of (ofType region, ofType particular)  subRelationOf generic_location_of
	nfp
		dc#title hasValue "exact location of@en"
		dc#description hasValue "A location relation bounded to regions and defined analytically through the composition of inherence and q_location. This is the analytical version of 'generic location'."
		rdfs#seeAlso hasValue dolce#exact_location_of
	endnfp
	
relation exact_location (ofType particular, ofType region)  subRelationOf generic_location
	nfp
		dc#title hasValue "exact location@en"
		dc#description hasValue "A location relation bounded to regions and defined analytically through the composition of inherence and q_location. This is the analytical version of 'generic location'."
		rdfs#seeAlso hasValue dolce#exact_location
	endnfp
	
relation temporary_atomic_part (ofType endurant, ofType endurant)  subRelationOf temporary_proper_part
	nfp
		dc#title hasValue "temporary_atomic_part@en"
		dc#description hasValue "Having an atom as part at a time t."
		rdfs#seeAlso hasValue dolce#temporary_atomic_part
	endnfp
	
relation temporary_atomic_part_of (ofType endurant, ofType endurant)  subRelationOf temporary_proper_part_of
	nfp
		dc#title hasValue "temporary_atomic_part_of@en"
		dc#description hasValue "Having an atom as part at a time t."
		rdfs#seeAlso hasValue dolce#temporary_atomic_part_of
	endnfp
	
relation overlaps (ofType particular, ofType particular)  subRelationOf mediated_relation
	nfp
		dc#title hasValue "overlaps@en"
		dc#description hasValue "Mereological overlap: having a common part."
		rdfs#seeAlso hasValue dolce#overlaps
	endnfp	
									     
wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-flight"
namespace { _"http://www.loa-cnr.it/ontologies/DUL.owl#",
	rdf _"http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    rdfs _"http://www.w3.org/2000/01/rdf-schema#",
    xsd _"http://www.w3.org/2001/XMLSchema#",
    dc _"http://purl.org/dc/elements/1.1/",
    DUL _"http://www.loa-cnr.it/ontologies/DUL.owl#"
 }

ontology DOLCE_Ultralite

 	annotations
        dc#publisher hasValue "IfGI, University of Muenster"
		dc#type hasValue "Foundational Ontology"
		dc#title hasValue "DOLCE+DnS Ultralite"	
		dc#description hasValue "Created by Aldo Gangemi as both a simplification and extension of DOLCE and Descriptions and Situations ontologies. WSML Translation by Marcell Roth"
		dc#source hasValue "http://www.ontologydesignpatterns.org/ont/DUL/DUL.owl"
		dc#subject hasValue "dolce, foundational"	
     endAnnotations


/* Classes */

concept Abstract subConceptOf Entity
	annotations
		dc#title hasValue "Abstract@en"
		dc#title hasValue "Astratto@it"
		dc#description hasValue "Any Entity that cannot be located in space-time. E.g. mathematical entities: formal semantics elements, regions within dimensional spaces, etc."
	endAnnotations
	
concept Action subConceptOf Event
	annotations
		dc#title hasValue "Action@en"
		dc#title hasValue "Azione@it"
		dc#description hasValue "An Event with at least one Agent that isParticipantIn it, and that executes a Task that typically isDefinedIn a Plan, Workflow, Project, etc."
	endAnnotations
	
concept Agent subConceptOf Object
	annotations
		dc#title hasValue "Agent@en"
		dc#title hasValue "Agente@it"
		dc#description hasValue "Any agentive Object , either physical (e.g. a whale, a robot, an oak), or social (e.g. a corporation, an institution, a community). Additional comment: a computational agent can be considered as a PhysicalAgent that realizes a certain class of algorithms (that can be considered as instances of InformationObject) that allow to obtain some behaviors that are considered typical of agents in general. For an ontology of computational objects based on DOLCE see e.g. http://www.loa-cnr.it/COS/COS.owl, and http://www.loa-cnr.it/KCO/KCO.owl."
	endAnnotations
	
concept Amount subConceptOf Region
	annotations
		dc#title hasValue "Amount@en"
		dc#title hasValue "Quantit@it"
		dc#description hasValue "A quantity, independently from how it is measured, computed, etc."
	endAnnotations
	
concept BiologicalObject subConceptOf PhysicalBody
	annotations
		dc#title hasValue "Biological object@en"
	endAnnotations
	
concept ChemicalObject subConceptOf PhysicalBody
	annotations
		dc#title hasValue "Chemical object@en"
	endAnnotations
	
concept Classification subConceptOf Situation
	annotations
		dc#title hasValue "Classification@en"
		dc#title hasValue "Classificazione@it"
		dc#description hasValue "A special kind of Situation that allows to include time indexing for the classifies relation in situations. For example, if a Situation s 'my old cradle is used in these days as a flower pot' isSettingFor the entity 'my old cradle' and the TimeIntervals '8June2007' and '10June2007', and we know that s satisfies a functional Description for aesthetic objects, which defines the Concepts 'flower pot' and 'flower', then we also need to know what concept classifies 'my old cradle' at what time.
			In order to solve this issue, we need to create a sub-situation s' for the classification time: 'my old cradle is a flower pot in 8June2007'. Such sub-situation s' isPartOf s."
	endAnnotations
	
concept Collection subConceptOf SocialObject
	annotations
		dc#title hasValue "Collection@en"
		dc#title hasValue "Collezione@it"
		dc#description hasValue "Any container for entities that share one or more common properties. E.g. \"stone objects\", \"the nurses\", \"the Louvre Aegyptian collection\", all the elections for the Italian President of the Republic. A collection is not a logical class: a collection is a first-order entity, while a class is second-order."
	endAnnotations
	
concept Collective subConceptOf Collection
	annotations
		dc#title hasValue "Collective@en"
		dc#title hasValue "Collettivo@it"
		dc#description hasValue "A Collection whose members are agents, e.g. \"the nurses\", \"the Italian rockabilly fans\". Collectives, facon de parler, can act as agents, although they are not assumed here to be agents (they are even disjoint from the class SocialAgent). This is represented by admitting collectives in the range of the relations having Agent in their domain or range."
	endAnnotations
	
concept CollectiveAgent subConceptOf SocialAgent
	annotations
		dc#title hasValue "Collective agent@en"
		dc#title hasValue "Agente collettivo@it"
		dc#description hasValue "A SocialAgent that is actedBy agents that are (and act as) members of a Collective. A collective agent can have roles that are also roles of those agents.
			For example, in sociology, a 'group action' is the situation in which a number of people (that result to be members of a collective) in a given area behave in a coordinated way in order to achieve a (often common) goal. The Agent in such a Situation is not single, but a CollectiveAgent (a Group). This can be generalized to the notion of social movement, which assumes a large Community or even the entire Society as agents.
			The difference between a CollectiveAgent and an Organization is that a Description that introduces a CollectiveAgent is also one that unifies the corresponding Collective. In practice, this difference makes collective agents 'less stable' than organizations, because they have a dedicated, publicly recognizable Description that is conceived to introduce them."
	endAnnotations

concept Community subConceptOf CollectiveAgent
	annotations
		dc#title hasValue "Community@en"
		dc#title hasValue "Comunità@it"
	endAnnotations	
	
concept Concept subConceptOf SocialObject
	annotations
		dc#title hasValue "Concept@en"
		dc#title hasValue "Concetto@it"
		dc#description hasValue "A Concept is a SocialObject, and isDefinedIn some Description; once defined, a Concept can be used in other Description(s). If a Concept isDefinedIn exactly one Description, see the LocalConcept class. The classifies relation relates Concept(s) to Entity(s) at some TimeInterval"
	endAnnotations
	
concept Configuration subConceptOf Collection
	annotations
		dc#title hasValue "Configuration@en"
		dc#title hasValue "Configurazione@it"
		dc#description hasValue "A collection whose members are 'unified', i.e. organized according to a certain schema that can be represented by a Description.
			Typically, a configuration is the collection that emerges out of a composed entity: an industrial artifact, a plan, a discourse, etc.  
			E.g. a physical book has a configuration provided by the part-whole schema that holds together its cover, pages, ink. That schema, based on the individual relations between the book and its parts, can be represented in a reified way by means of a (structural) description, which is said to 'unify' the book configuration."
	endAnnotations
	
concept Contract subConceptOf Description
	annotations
		dc#title hasValue "Contract@en"
		dc#title hasValue "Contratto@it"
		dc#description hasValue "(The content of) an agreement between at least two agents that play a Party Role, about some contract object (a Task to be executed)."
	endAnnotations
	
concept Description subConceptOf SocialObject
	annotations
		dc#title hasValue "Description@en"
		dc#title hasValue "Descrizione@it"
		dc#description hasValue "A Description is a SocialObject that represents a conceptualization. 
It can be thought also as a 'descriptive context' that uses or defines concepts in order to create a view on a 'relational context' (cf. Situation) out of a set of data or observations. 
For example, a Plan is a Description of some actions to be executed by agents in a certain way, with certain parameters; a Diagnosis is a Description that provides an interpretation for a set of observed entities, etc."
	endAnnotations
	
concept Design subConceptOf Description
	annotations
		dc#title hasValue "Design@en"
		dc#title hasValue "Design@it"
		dc#description hasValue "A Description of the Situation, in terms of structure and function, held by an Entity for some reason.
A design is usually accompanied by the rationales behind the construction of the designed Entity (i.e. of the reasons why a design is claimed to be as such). For example, the actual design (a Situation) of a car or of a law is based on both the specification (a Description) of the structure and the rationales used to construct cars or a specific law.
While designs typically describe entities to be constructed, they can also be used to describe 'refunctionalized' entities, or to hypothesize unknown functions."
	endAnnotations
	
concept DesignedArtifact subConceptOf PhysicalArtifact
	annotations
		dc#title hasValue "Designed artifact@en"
		dc#title hasValue "Artefatto progettato@it"
		dc#description hasValue "A PhysicalArtifact that is also described by a Design. This excludes simple recycling or refunctionalization of natural objects. Most common sense 'artifacts' can be included in this class: cars, lamps, houses, chips, etc."
	endAnnotations
	
concept DesignedSubstance subConceptOf {DesignedArtifact, FunctionalSubstance} 
	annotations
		dc#title hasValue "DesignedSubstance@en"
	endAnnotations
	
concept Diagnosis subConceptOf Description
	annotations
		dc#title hasValue "Diagnosis@en"
		dc#title hasValue "Diagnosi@it"
		dc#description hasValue "A Description of the Situation of a system, usually applied in order to control a normal behaviour, or to explain a notable behavior (e.g. a functional breakdown)."
	endAnnotations
	
concept Entity
	annotations
		dc#title hasValue "Entity@en"
		dc#title hasValue "Entità@it"
		dc#description hasValue "Anything: real, possible, or imaginary, which some modeller wants to talk about for some purpose."
	endAnnotations
	
concept Event subConceptOf Entity
	annotations
		dc#title hasValue "Event@en"
		dc#title hasValue "Evento@it"
		dc#description hasValue "Any physical, social, or mental process, event, or state."
	endAnnotations
	
concept EventType subConceptOf Concept
	annotations
		dc#title hasValue "Event type@en"
		dc#title hasValue "Tipo di evento@it"
		dc#description hasValue "A Concept that classifies an Event . An event type describes how an Event should be interpreted, executed, expected, seen, etc., according to the Description that the EventType isDefinedIn (or used in)"
	endAnnotations
	
concept FormalEntity subConceptOf Abstract
	annotations
		dc#title hasValue "Formal entity@en"
		dc#title hasValue "Entità formale astratta@it"
		dc#description hasValue "Entities that are formally defined and are considered independent from the social context in which they are used. They cannot be localized in space or time. Also called 'Platonic entities'.
			Mathematical and logical entities are included in this class: sets, categories, tuples, costants, variables, etc.
			Abstract formal entities are distinguished from information objects, which are supposed to be part of a social context, and are localized in space and time, therefore being (social) objects.
			For example, the class 'Quark' is an abstract formal entity from the purely set-theoretical perspective, but it is an InformationObject from the viewpoint of ontology design, when e.g. implemented in a logical language like OWL.
			Abstract formal entities are also distinguished from Concept(s), Collection(s), and Description(s), which are part of a social context, therefore being SocialObject(s) as well.
			For example, the class 'Quark' is an abstract FormalEntity from the purely set-theoretical perspective, but it is a Concept within history of science and cultural dynamics.

			These distinctions allow to represent two different notions of 'semantics': the first one is abstract and formal ('formal semantics'), and formallyInterprets symbols that are about entities whatsoever; for example, the term 'Quark' isAbout the Collection of all quarks, and that Collection isFormalGroundingFor the abstract class 'Quark' (in the extensional sense). 
			The second notion is social, localized in space-time ('social semantics'), and can be used to interpret entities in the intensional sense. For example, the Collection of all quarks isCoveredBy the Concept 'Quark', which is also expressed by the term 'Quark'."
	endAnnotations
	
concept FunctionalSubstance subConceptOf Substance
	annotations
		dc#title hasValue "Functional substance@en"
	endAnnotations
	
concept Goal subConceptOf Description
	annotations
		dc#title hasValue "Goal@en"
		dc#title hasValue "Scopo@it"
		dc#description hasValue "The Description of a Situation that is desired by an Agent, and usually associated to a Plan that describes how to actually achieve it"
	endAnnotations
	
concept Group subConceptOf CollectiveAgent
	annotations
		dc#title hasValue "Group@en"
		dc#title hasValue "Gruppo@it"
		dc#description hasValue "A CollectiveAgent whose acting agents conceptualize a same SocialRelation."
	endAnnotations
	
concept InformationEntity subConceptOf Entity
	annotations
		dc#title hasValue "Information entity@en"
		dc#description hasValue "A piece of information, be it concretely realized or not."
	endAnnotations
	
concept InformationObject subConceptOf {InformationEntity, SocialObject}
	annotations
		dc#title hasValue "Information object@en"
		dc#title hasValue "Oggetto informativo@it"
		dc#description hasValue "A piece of information, such as a musical composition, a text, a word, a picture, independently from how it is concretely realized."
	endAnnotations
	
concept InformationRealization subConceptOf InformationEntity
	annotations
		dc#title hasValue "Information realization@en"
		dc#title hasValue "Informazione concreta@it"
		dc#description hasValue "A concrete realization of an InformationObject, e.g. the written document containing the text of a law."
	endAnnotations
	
concept LocalConcept subConceptOf Concept
	annotations
		dc#title hasValue "Local concept@en"
		dc#description hasValue "A Concept that isDefinedIn exactly 1 Description. For example, the Concept 'coffee' in a 'preparesCoffee' relation can be defined in that relation, and for all other Description(s) that use it, the isConceptUsedIn property should be applied. Notice therefore that not necessarily all Concept(s) isDefinedIn exactly 1 Description."
	endAnnotations
	
concept Method subConceptOf Description
	annotations
		dc#title hasValue "Method@en"
		dc#title hasValue "Metodo@it"
		dc#description hasValue "A method is a Description that defines or uses concepts in order to guide carrying out actions aimed at a solution with respect to a problem. 
			It is different from a Plan, because plans could be carried out in order to follow a method, but a method can be followed by executing alternative plans."
	endAnnotations
	
concept Narrative subConceptOf Description
	annotations
		dc#title hasValue "Narrative@en"
	endAnnotations
	
concept NaturalPerson subConceptOf {Person, PhysicalAgent}
	annotations
		dc#title hasValue "Natural person@en"
		dc#title hasValue "Persona fisica@it"
		dc#description hasValue "A person in the physical commonsense intuition: 'have you seen that person walking down the street?'"
	endAnnotations
	
concept Norm subConceptOf Description
	annotations
		dc#title hasValue "Norm@en"
		dc#title hasValue "Norma@it"
		dc#description hasValue "A social norm."
	endAnnotations
	
concept Object subConceptOf Entity
	annotations
		dc#title hasValue "Object@en"
		dc#title hasValue "Oggetto@it"
		dc#description hasValue "Any physical, social, or mental object, or a substance"
	endAnnotations
	
concept Organism subConceptOf BiologicalObject
	annotations
		dc#title hasValue "Organism@en"
		dc#title hasValue "Organismo@it"
		dc#description hasValue "A physical objects with biological characteristics, typically that organisms can self-reproduce."
	endAnnotations
	
concept Organization subConceptOf SocialAgent
	annotations
		dc#title hasValue "Organization@en"
		dc#title hasValue "Organizzazione@it"
		dc#description hasValue "An internally structured, conventionally created SocialAgent, needing a specific Role and Agent that plays it, in order to act."
	endAnnotations
	
concept Parameter subConceptOf Concept
	annotations
		dc#title hasValue "Parameter@en"
		dc#title hasValue "Parametro@it"
		dc#description hasValue "A Concept that classifies a Region; the difference between a Region and a Parameter is that regions represent sets of observable values, e.g. the height  of a given building, while parameters represent constraints or selections on observable values, e.g. 'VeryHigh'. Therefore, parameters can also be used to constrain regions, e.g. VeryHigh on a subset of values of the Region Height applied to buildings, or to add an external selection criterion , such as measurement units, to regions, e.g. Meter on a subset of values from the Region Length applied to the Region Length applied to roads."
	endAnnotations
	
concept Pattern subConceptOf Relation
	annotations
		dc#title hasValue "Pattern@en"
		dc#description hasValue "Any invariance detected from a dataset, or from observation; also, any invariance proposed based on top-down considerations.
			E.g. patterns detected and abstracted by an organism, by pattern recognition algorithms, by machine learning techniques, etc.
			An occurrence of a pattern is an 'observable', or detected Situation"
	endAnnotations
	
concept Person subConceptOf Agent
	annotations
		dc#title hasValue "Person@en"
		dc#title hasValue "Persona@it"
		dc#description hasValue "Persons in commonsense intuition, which does not apparently distinguish between either natural or social persons."
	endAnnotations
	
concept Personification subConceptOf SocialAgent
	annotations
		dc#title hasValue "Personification@en"
		dc#description hasValue "A social entity with agentive features, but whose status is the result of a cultural transformation from e.g. a PhysicalObject, an Event, an Abstract, another SocialObject, etc. For example: the holy grail, deus ex machina, gods, magic wands, etc."
	endAnnotations
	
concept PhysicalAgent subConceptOf {Agent, PhysicalObject}
	annotations
		dc#title hasValue "Physical agent@en"
		dc#title hasValue "Agente fisico@it"
		dc#description hasValue "A PhysicalObject that is capable of self-representing (conceptualizing) a Description in order to plan an Action. 
			A PhysicalAgent is a substrate for (actsFor) a Social Agent"
	endAnnotations
	
concept PhysicalArtifact subConceptOf Plan
	annotations
		dc#title hasValue "Physical artifact@en"
		dc#title hasValue "Artefatto fisico@it"
		dc#description hasValue "Any PhysicalObject that isDescribedBy a Plan .
			This axiomatization is weak, but allows to talk of artifacts in a very general sense, i.e. including recycled objects, objects with an intentional functional change, natural objects that are given a certain function, even though they are not modified or structurally designed, etc. PhysicalArtifact(s) are not considered disjoint from PhysicalBody(s), in order to allow a dual classification when needed. E.g.,
			FunctionalSubstance(s) are included here as well.
			Immaterial (non-physical) artifacts (e.g. texts, ideas, cultural movements, corporations, communities, etc. can be modelled as social objects (see SocialObject), which are all 'artifactual' in the weak sense assumed here."
	endAnnotations
	
concept PhysicalAttribute subConceptOf Region
	annotations
		dc#title hasValue "Physical attribute@en"
		dc#title hasValue "Caratteristica fisica@it"
		dc#description hasValue "Physical value of a physical object, e.g. density, color, etc."
	endAnnotations
	
concept PhysicalBody subConceptOf PhysicalObject
	annotations
		dc#title hasValue "Physical body@en"
		dc#description hasValue "Physical bodies are PhysicalObject(s), for which we tend to neutralize any possible artifactual character. They can have several granularity levels: geological, chemical, physical, biological, etc."
	endAnnotations
		
concept PhysicalObject subConceptOf Object
	annotations
		dc#title hasValue "Physical object@en"
		dc#title hasValue "Oggetto fisico@it"
		dc#description hasValue "Any Object that has a proper space region. The prototypical physical object has also an associated mass, but the nature of its mass can greatly vary based on the epistemological status of the object (scientifically measured, subjectively possible, imaginary)."
	endAnnotations
	
concept PhysicalPlace subConceptOf PhysicalObject
	annotations
		dc#title hasValue "Physical place@en"
		dc#title hasValue "Luogo fisico@it"
		dc#description hasValue "A physical object that is inherently located; for example, a water area."
	endAnnotations
	
concept Place subConceptOf SocialObject
	annotations
		dc#title hasValue "Place@en"
		dc#title hasValue "Luogo@it"
		dc#description hasValue "A location, in a very generic sense: a political geographic entity (Roma, Lesotho), a non-material location determined by the presence of other entities (\"the area close to Roma\"), pivot events or signs (\"the area where the helicopter fell\"), complements of other entities (\"the area under the table\"), etc. 
			In this generic sense, a Place is an \"approximate\" location. For an \"absolute\" location, see the class SpaceRegion"
	endAnnotations
	
concept Plan subConceptOf Description
	annotations
		dc#title hasValue "Plan@en"
		dc#title hasValue "Piano@it"
		dc#description hasValue "A Description having an explicit Goal, to be achieved by executing the plan"
	endAnnotations
	
concept PlanExecution subConceptOf Situation
	annotations
		dc#title hasValue "Plan execution@en"
		dc#title hasValue "Esecuzione di piano@it"
		dc#description hasValue "Plan executions are situations that proactively satisfy a plan. Subplan executions are proper parts of the whole plan execution."
	endAnnotations
	
concept Process subConceptOf Event
	annotations
		dc#title hasValue "Process@en"
		dc#title hasValue "Processo@it"
		dc#description hasValue "This is a placeholder for events that are considered in their evolution, or anyway not strictly dependent on agents, tasks, and plans. 
			See Event class for some thoughts on classifying events. See also 'Transition'."
	endAnnotations
	
concept Project subConceptOf Plan
	annotations
		dc#title hasValue "Project@en"
		dc#title hasValue "Progetto@it"
		dc#description hasValue "A Plan that defines Role(s), Task(s), and a specific structure for tasks to be executed in relation to goals to be achieved, in order to achieve the main goal of the project. In other words, a project is a plan with a subgoal structure and multiple roles and tasks."
	endAnnotations
	
concept Quality subConceptOf Entity
	annotations
		dc#title hasValue "Quality@en"
		dc#title hasValue "QualitÃ@it"
		dc#description hasValue "Any aspect of an Entity (but not a part of it), which cannot exist without that Entity. For example, the way the surface of a specific PhysicalObject looks like is a Quality, while the encoding of that Quality into e.g. a PhysicalAttribute should be modeled as a Region. 
			From the design viewpoint, the Quality-Region distinction is useful only when individual aspects of an Entity are considered in a domain of discourse. 
			For example, in an automotive context, it would be irrelevant to consider the aspects of car windows for a specific car, unless the factory wants to check a specific window against design parameters (anomaly detection). 
			On the other hand, in an antiques context, the individual aspects for a specific piece of furniture are a major focus of attention, and may constitute the actual added value, because the design parameters for old furniture are often not fixed, and may not be viewed as 'anomalies'."
	endAnnotations
	
concept Region subConceptOf Abstract
	annotations
		dc#title hasValue "Region@en"
		dc#title hasValue "Regione@it"
		dc#description hasValue "Any region in a dimensional space (a dimensional space is a maximal Region), which can be used as a value for a quality of an Entity . For example, TimeInterval, SpaceRegion, PhysicalAttribute, Amount, SocialAttribute are all subclasses of Region. 
			Regions are not data values in the ordinary knowledge representation sense; in order to get patterns for modelling data, see the properties: representsDataValue and hasDataValue"
	endAnnotations
	
concept Relation subConceptOf Description
	annotations
		dc#title hasValue "Relation@en"
		dc#title hasValue "Relazione@it"
		dc#description hasValue "Relations are descriptions that can be considered as the counterpart of formal relations (that are included in the FormalEntity class).
			For example, 'givingGrantToInstitution(x,y,z)' with three argument types: Provider(x),Grant(y),Recipient(z), can have a Relation counterpart: 'GivingGrantToInstitution', which defines three Concept instances: Provider,Grant,Recipient.
			Since social objects are not formal entities, Relation includes here any 'relation-like' entity in common sense, including social relations."
	endAnnotations
	
concept Right subConceptOf Description
	annotations
		dc#title hasValue "Right@en"
		dc#title hasValue "Diritto@it"
		dc#description hasValue "A legal position by which an Agent is entitled to obtain something from another Agent , under specified circumstances, through an enforcement explicited either in a Law, Contract , etc."
	endAnnotations
	
concept Role subConceptOf Concept
	annotations
		dc#title hasValue "Role@en"
		dc#title hasValue "Ruolo@it"
		dc#description hasValue "A Concept that classifies an Object"
	endAnnotations
	
concept Set subConceptOf FormalEntity
	annotations
		dc#title hasValue "Set@en"
		dc#title hasValue "Insieme@it"
	endAnnotations
	
concept Role subConceptOf Concept
	annotations
		dc#title hasValue "Role@en"
		dc#title hasValue "Ruolo@it"
		dc#description hasValue "A Concept that classifies an Object"
	endAnnotations
	
concept Situation subConceptOf SocialObject
	annotations
		dc#title hasValue "Situation@en"
		dc#title hasValue "Situazione@it"
		dc#description hasValue "A view, consistent with ('satisfying') a Description, on a set of entities. 
			It can also be seen as a 'relational context' created by an observer on the basis of a 'frame' (i.e. a Description). 
			For example, a PlanExecution is a context including some actions executed by agents according to certain parameters and expected tasks to be achieved from a Plan; a DiagnosedSituation is a context of observed entities that is interpreted on the basis of a Diagnosis, etc.
			Situation is also able to represent reified n-ary relations, where isSettingFor is the top-level relation for all binary projections of the n-ary relation. If used in a transformation pattern for n-ary relations, the designer should take care of creating only one subclass of Situation for each n-ary relation, otherwise the 'identification constraint' (Calvanese et al., IJCAI 2001) could be violated."
	endAnnotations
	
concept SocialAgent subConceptOf {Agent, SocialObject}
	annotations
		dc#title hasValue "Social agent@en"
		dc#title hasValue "Agente sociale@it"
		dc#description hasValue "Any individual whose existence is granted simply by its social communicability and capability of action (through some PhysicalAgent)."
	endAnnotations
	
concept SocialObject subConceptOf Object
	annotations
		dc#title hasValue "Social object@en"
		dc#title hasValue "Oggetto sociale@it"
		dc#description hasValue "Any Object that exists only within some communication Event, in which at least one PhysicalObject participates in. 
			In other words, all objects that have been or are created in the process of social communication: for the sake of communication (InformationObject), for incorporating new individuals (SocialAgent, Place), for contextualizing existing entities (Situation), for collecting existing entities (Collection), or for describing existing entities (Description, Concept).
			Being dependent on communication, all social objects need to be expressed by some information object (information object are self-expressing)."
	endAnnotations
	
concept SocialObjectAttribute subConceptOf Region
	annotations
		dc#title hasValue "Social attribute@en"
		dc#title hasValue "Caratteristica sociale@it"
		dc#description hasValue "Any Region in a dimensional space that is used to represent some characteristic of a SocialObject, e.g. judgment values, social scalars, statistical attributes over a collection of entities, etc."
	endAnnotations
	
concept SocialPerson subConceptOf {Person, SocialAgent}
	annotations
		dc#title hasValue "Social person@en"
		dc#title hasValue "Persona sociale@it"
		dc#description hasValue "A SocialAgent that needs the existence of a specific NaturalPerson in order to act (but the lifetime of the NaturalPerson has only to overlap that of the SocialPerson)."
	endAnnotations
	
concept SocialRelation subConceptOf Relation
	annotations
		dc#title hasValue "Social relation@en"
		dc#title hasValue "Relazione sociale@it"
		dc#description hasValue "Any social relationship"
	endAnnotations
	
concept SpaceRegion subConceptOf Region
	annotations
		dc#title hasValue "Space region@en"
		dc#title hasValue "Regione di spazio@it"
		dc#description hasValue "Any Region in a dimensional space that is used to localize an Entity ; i.e., it is not used to represent some characteristic (e.g. it excludes time intervals, colors, size values, judgment values, etc.). Differently from a Place , a space region has a specific dimensional space."
	endAnnotations
	
concept SpatioTemporalRegion subConceptOf Region
	annotations
		dc#title hasValue "Spatio temporal region@en"
	endAnnotations
	
concept Substance subConceptOf PhysicalBody
	annotations
		dc#title hasValue "Substance@en"
		dc#title hasValue "Sostanza@it"
		dc#description hasValue "Any PhysicalBody that has not necessarily specified (designed) boundaries, e.g. a pile of trash, some sand, etc. 
			In this sense, an artistic object made of trash or a dose of medicine in the form of a pill would be a FunctionalSubstance, and a DesignedArtifact, since its boundaries are specified by a Design; aleatoric objects that are outcomes of an artistic process might be still considered DesignedArtifact(s), and Substance(s)."
	endAnnotations
	
concept Task subConceptOf EventType
	annotations
		dc#title hasValue "Task@en"
		dc#title hasValue "Task@it"
		dc#description hasValue "An EventStructure that classifies an Action to be executed"
	endAnnotations
	
concept Theory subConceptOf Description
	annotations
		dc#title hasValue "Theory@en"
		dc#title hasValue "Teoria@it"
		dc#description hasValue "A Theory is a Description that represents a set of assumptions for describing something, usually general. Scientific, philosophical, and commonsense theories can be included here.
			This class can also be used to act as 'naturalized reifications' of logical theories (of course, they will be necessarily incomplete in this case, because second-order entities are represented as first-order ones)."
	endAnnotations
	
concept TimeInterval subConceptOf Region
	annotations
		dc#title hasValue "Time interval@en"
		dc#title hasValue "Intervallo di tempo@it"
		dc#description hasValue "Any Region in a dimensional space that aims at representing time."
	endAnnotations
	
concept Transition subConceptOf Situation
	annotations
		dc#title hasValue "Transition@en"
		dc#title hasValue "Transizione@it"
		dc#description hasValue "A transition is a Situation that creates a context for three TimeInterval(s), two additional different Situation(s), one Event, one Process, and at least one Object: the Event is observed as the cause for the transition, one Situation is the state before the transition, the second Situation is the state after the transition, the Process is the invariance under some different transitions (including the one represented here), in which at least one Object is situated. Finally, the time intervals position the situations and the transitional event in time.
			This class of situations partly encodes the ontology underlying typical engineering algebras for processes, e.g. Petri Nets. 
			A full representation of the transition ontology is outside the expressivity of OWL, because we would need qualified cardinality restrictions,  coreference, property equivalence, and property composition."
	endAnnotations
	
concept TypeCollection subConceptOf Collection
	annotations
		dc#title hasValue "Type collection@en"
		dc#title hasValue "Collezione di un tipo@it"
		dc#description hasValue "A Collection whose members are the maximal set of individuals that share the same (named) type, e.g. \"the gem stones\", \"the Italians\".
			This class is very useful to apply a variety of the so-called \"ClassesAsValues\" design pattern, when it is used to talk about the extensional aspect of a class. An alternative variety of the pattern applies to the intensional aspect of a class, and the class Concept should be used instead."
	endAnnotations
	
concept UnitOfMeasure subConceptOf Parameter
	annotations
		dc#title hasValue "Unit of measure@en"
		dc#title hasValue "Unità di misura@it"
		dc#description hasValue "Units of measure are conceptualized here as parameters on regions, which can be valued as datatype values."
	endAnnotations
	
concept Workflow subConceptOf Plan
	annotations
		dc#title hasValue "Workflow@en"
		dc#title hasValue "Workflow@it"
		dc#description hasValue "A Plan that defines Role(s), Task(s), and a specific structure for tasks to be executed, usually supporting the work of an Organization"
	endAnnotations
	
concept WorkflowExecution subConceptOf PlanExecution
	annotations
		dc#title hasValue "Workflow execution@en"
		dc#title hasValue "Esecuzione di workflow@it"
	endAnnotations
	
	
/* Relations */

relation actsFor (ofType Agent, ofType SocialAgent)  subRelationOf associatedWith
	annotations
		dc#title hasValue "acts for@en"
		dc#title hasValue "agisce per@it"
		dc#description hasValue "The relation holding between any Agent, and a SocialAgent. In principle, a SocialAgent requires at least one PhysicalAgent in order to act, but this dependency can be 'delegated'; e.g. a university can be acted for by a department, which on its turm is acted for by physical agents."
	endAnnotations	

relation overlaps (ofType Entity, ofType Entity)  subRelationOf associatedWith
	annotations
		dc#title hasValue "overlaps@en"
		dc#title hasValue "sovrapposto a@it"
		dc#description hasValue "A schematic relation between any entities, e.g. 'the chest region overlaps with the abdomen region', 'my spoken words overlap with hers', 'the time of my leave overlaps with the time of your arrival', 'fibromyalgia overlaps with other conditions'.
			Subproperties and restrictions can be used to specialize overlaps for objects, events, time intervals, etc."
	endAnnotations	


@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix : <http://purl.org/ifgi/dolce#> .
@prefix dolce: <http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .

_:node16tsn6s7vx1 a owl:Ontology ;
	rdfs:label "DOLCE_Lite" ;
	dc:format "http://www.wsmo.org/wsml/wsml-syntax/wsml-flight" ;
	dc:publisher "IfGI, University of Muenster"^^xsd:string ;
	dc:type "Foundational Ontology"^^xsd:string ;
	dc:title "DOLCE Foundational Ontology"^^xsd:string ;
	dc:description "The DOLCE and DnS ontologies. OWL engineering by Aldo Gangemi. WSML Translation by Patrick Mauï¿½"^^xsd:string ;
	dc:source "http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl"^^xsd:string ;
	dc:subject "dolce, foundational"^^xsd:string .

:abstract a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#abstract" ;
	rdfs:subClassOf :particular ;
	dc:identifier "Abstract@en"^^xsd:string ;
	dc:description "The main characteristic of abstract entities is that they do not have spatial nor temporal qualities, and they are not qualities themselves. The only class of abstract entities we consider in the present version of the upper ontology is that of quality regions (or simply regions). Quality spaces are special kinds of quality regions, being mereological sums of all the regions related to a certain quality type. The other examples of abstract entities (sets and facts) are only indicative."^^xsd:string ;
	rdfs:seeAlso dolce:abstract .

:abstract_quality a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#abstract_quality" ;
	rdfs:subClassOf :quality ;
	dc:identifier "abstract quality@en"^^xsd:string ;
	dc:description "A quality inherent in a non-physical endurant"^^xsd:string ;
	rdfs:seeAlso dolce:abstract-quality .

:abstract_region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#abstract_region" ;
	rdfs:subClassOf :region ;
	dc:identifier "Abstract Region@en"^^xsd:string ;
	dc:description "A region at which only abstract qualities can be directly located. It assumes some metrics for abstract (neither physical nor temporal) properties."^^xsd:string ;
	rdfs:seeAlso dolce:abstract-region .

:achievement a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#achievement" ;
	rdfs:subClassOf :event ;
	dc:identifier "Achievement@en"^^xsd:string ;
	dc:description "Eventive occurrences (events) are called achievements if they are atomic, otherwise they are accomplishments.Further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be seen as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (collapsing the time interval of the erosion into a time point), as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality)."^^xsd:string ;
	rdfs:seeAlso dolce:achievement .

:accomplishment a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#accomplishment" ;
	rdfs:subClassOf :event ;
	dc:identifier "Accomplishment@en"^^xsd:string ;
	dc:description "Eventive occurrences (events) are called achievements if they are atomic, otherwise they are accomplishments.Further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be seen as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (collapsing the time interval of the erosion into a time point), as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality)."^^xsd:string ;
	rdfs:seeAlso dolce:accomplishment .

:amount_of_matter a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#amount_of_matter" ;
	rdfs:subClassOf :physical_endurant ;
	dc:identifier "Amount of matter@en"^^xsd:string ;
	dc:description "The common trait of amounts of matter is that they are endurants with no unity (according to Gangemi et a. 2001 none of them is an essential whole). Amounts of matter - 'stuffs' referred to by mass nouns like 'gold', 'iron', 'wood', 'sand', 'meat', etc. - are mereologically invariant, in the sense that they change their identity when they change some parts."^^xsd:string ;
	rdfs:seeAlso dolce:amount-of-matter .

:arbitrary_sum a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#arbitrary_sum" ;
	rdfs:subClassOf :endurant ;
	dc:identifier "arbitrary sum@en"^^xsd:string ;
	dc:description "AKA arbitrary-collection.The mereological sum of any two or more endurants (physical or not). Arbitrary sums have no unity criterion (they are 'extensional')."^^xsd:string ;
	rdfs:seeAlso dolce:arbitrary-sum .

:dependent_place a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#dependent_place" ;
	rdfs:subClassOf :feature ;
	dc:identifier "Dependent Place@en"^^xsd:string ;
	dc:description "A feature that is not part of its host, like a hole in a piece of cheese, the underneath of a table, the front of a house, or the shadow of a tree."^^xsd:string ;
	rdfs:seeAlso dolce:dependent-place .

:event a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#event" ;
	rdfs:subClassOf :perdurant ;
	dc:identifier "Event@en"^^xsd:string ;
	dc:description "An occurrence-type is stative or eventive according to whether it holds of the mereological sum of two of its instances, i.e. if it is cumulative or not. A sitting occurrence is stative since the sum of two sittings is still a sitting occurrence.In general, events differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion.On the other hand, at any time, one can conceive a description that asserts the constraints by which an event of a certian type is such, and in this case, it becomes a situation.Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align an event-oriented class. For example, in the WordNet alignment, we have decided to put only some physical events under 'event', e.g. 'discharge', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive discharge events, these will be put under 'situation'.Similar considerations are made for the other types of perdurants in DOLCE.A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality).If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation."^^xsd:string ;
	rdfs:seeAlso dolce:event .

:endurant a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#endurant" ;
	rdfs:subClassOf :spatio_temporal_particular ;
	dc:identifier "Endurant@en"^^xsd:string ;
	dc:description "The main characteristic of endurants is that all of them are independent essential wholes. This does not mean that the corresponding property (being an endurant) carries proper unity, since there is no common unity criterion for endurants. Endurants can 'genuinely' change in time, in the sense that the very same endurant as a whole can have incompatible properties at different times. To see this, suppose that an endurant - say 'this paper' - has a property at a time t 'it's white', and a different, incompatible property at time t' 'it's yellow': in both cases we refer to the whole object, without picking up any particular part of it. Within endurants, we distinguish between physical and non-physical endurants, according to whether they have direct spatial qualities. Within physical endurants, we distinguish between amounts of matter, objects, and features."^^xsd:string ;
	rdfs:seeAlso dolce:endurant .

:feature a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#feature" ;
	rdfs:subClassOf :physical_endurant ;
	dc:identifier "Feature@en"^^xsd:string ;
	dc:description "Features are 'parasitic entities', that exist insofar their host exists. Typical examples of features are holes, bumps, boundaries, or spots of color. Features may be relevant parts of their host, like a bump or an edge, or dependent regions like a hole in a piece of cheese, the underneath of a table, the front of a house, or the shadow of a tree, which are not parts of their host. All features are essential wholes, but no common unity criterion may exist for all of them. However, typical features have a topological unity, as they are singular entities.Here only features of physical endurants are considered."^^xsd:string ;
	rdfs:seeAlso dolce:feature .

:non_physical_endurant a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#non_physical_endurant" ;
	rdfs:subClassOf :endurant ;
	dc:identifier "Non-physical Endurant@en"^^xsd:string ;
	dc:description "An endurant with no mass, generically constantly depending on some agent. Non-physical endurants can have physical constituents (e.g. in the case of members of a collection)."^^xsd:string ;
	rdfs:seeAlso dolce:non-physical-endurant .

:non_physical_endurant_prop_has_quality a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#has_quality" ;
	rdfs:domain :non_physical_endurant ;
	a rdf:Property ;
	rdfs:range :abstract_quality .

:non_physical_endurant_prop_part a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#part" ;
	rdfs:domain :non_physical_endurant ;
	a rdf:Property ;
	rdfs:range :non_physical_endurant .

:non_physical_object a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#non_physical_object" ;
	rdfs:subClassOf :non_physical_endurant ;
	dc:identifier "Non-Physical Object@en"^^xsd:string ;
	dc:description "Formerly known as description. A unitary endurant with no mass (non-physical), generically constantly depending on some agent, on some communication act, and indirectly on some agent participating in that act. Both descriptions (in the now current sense) and concepts are non-physical objects."^^xsd:string ;
	rdfs:seeAlso dolce:non-physical-object .

:non_physical_object_prop_generically_dependent_on a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#generically_dependent_on" ;
	rdfs:domain :non_physical_object ;
	a rdf:Property ;
	rdfs:range :physical_endurant .

:particular a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#particular" ;
	dc:identifier "Particular@en"^^xsd:string ;
	dc:description "AKA 'entity'.Any individual in the DOLCE domain of discourse. The extensional coverage of DOLCE is as large as possible, since it ranges on 'possibilia', i.e all possible individuals that can be postulated by means of DOLCE axioms. Possibilia include physical objects, substances, processes, qualities, conceptual regions, non-physical objects, collections and even arbitrary sums of objects.The class 'particular' features a covering partition that includes: endurant, perdurant, quality, and abstract. There are also some subclasses defined as unions of subclasses of 'particular' for special purposes: spatio-temporal-particular (any particular except abstracts)- physical-realization (any realization of an information object, defined in the ExtendedDnS ontology)."^^xsd:string ;
	rdfs:seeAlso dolce:particular .

:perdurant a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#perdurant" ;
	rdfs:subClassOf :spatio_temporal_particular ;
	dc:identifier "Perdurant@en"^^xsd:string ;
	dc:description "Perdurants (AKA occurrences) comprise what are variously called events, processes, phenomena, activities and states. They can have temporal parts or spatial parts. For instance, the first movement of (an execution of) a symphony is a temporal part of the symphony. On the other hand, the play performed by the left side of the orchestra is a spatial part. In both cases, these parts are occurrences themselves. We assume that objects cannot be parts of occurrences, but rather they participate in them. Perdurants extend in time by accumulating different temporal parts, so that, at any time they are present, they are only partially present, in the sense that some of their proper temporal parts (e.g., their previous or future phases) may be not present. E.g., the piece of paper you are reading now is wholly present, while some temporal parts of your reading are not present yet, or any more. Philosophers say that endurants are entities that are in time, while lacking temporal parts (so to speak, all their parts flow with them in time). Perdurants, on the contrary, are entities that happen in time, and can have temporal parts (all their parts are fixed in time)."^^xsd:string ;
	rdfs:seeAlso dolce:perdurant .

:perdurant_prop_has_quality a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#has_quality" ;
	rdfs:domain :perdurant ;
	a rdf:Property ;
	rdfs:range :temporal_location_q .

:perdurant_prop_participant a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#participant" ;
	rdfs:domain :perdurant ;
	a rdf:Property ;
	rdfs:range :endurant .

:perdurant_prop_part a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#part" ;
	rdfs:domain :perdurant ;
	a rdf:Property ;
	rdfs:range :perdurant .

:physical_object a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#physical_object" ;
	rdfs:subClassOf :physical_endurant ;
	dc:identifier "physical object@en"^^xsd:string ;
	dc:description "The main characteristic of physical objects is that they are endurants with unity. However, they have no common unity criterion, since different subtypes of objects may have different unity criteria. Differently from aggregates, (most) physical objects change some of their parts while keeping their identity, they can have therefore temporary parts. Often physical objects (indeed, all endurants) are ontologically independent from occurrences (discussed below). However, if we admit that every object has a life, it is hard to exclude a mutual specific constant dependence between the two. Nevertheless, we may still use the notion of dependence to (weakly) characterize objects as being not specifically constantly dependent on other objects."^^xsd:string ;
	rdfs:seeAlso dolce:physical-object .

:physical_endurant a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#physical_endurant" ;
	rdfs:subClassOf :endurant ;
	dc:identifier "Physical Endurant@en"^^xsd:string ;
	dc:description "An endurant having a direct physical (at least spatial) quality."^^xsd:string ;
	rdfs:seeAlso dolce:physical-endurant .

:physical_quality a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#physical_quality" ;
	rdfs:subClassOf :quality ;
	dc:identifier "Physical Quality@en"^^xsd:string ;
	dc:description "A quality inherent in a physical endurant."^^xsd:string ;
	rdfs:seeAlso dolce:physical-quality .

:physical_region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#physical_region" ;
	rdfs:subClassOf :quality ;
	dc:identifier "Physical Region@en"^^xsd:string ;
	dc:description "A region at which only physical qualities can be directly located. It assumes some metrics for physical properties."^^xsd:string ;
	rdfs:seeAlso dolce:physical-region .

:process a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#process" ;
	rdfs:subClassOf :stative ;
	dc:identifier "Process@en"^^xsd:string ;
	dc:description "Within stative occurrences, we distinguish between states and processes according to homeomericity: sitting is classified as a state but running is classified as a process, since there are (very short) temporal parts of a running that are not themselves runnings. In general, processes differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion. On the other hand, at any time, one can conceive a description that asserts the constraints by which a process of a certian type is such, and in this case, it becomes a situation. Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align a process-oriented class. For example, in the WordNet alignment, we have decided to put only some physical processes under 'process', e.g. 'organic process', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive organic processes, these will be put under 'situation'. Similar considerations are made for the other types of perdurants in DOLCE. A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another). In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality). If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation."^^xsd:string ;
	rdfs:seeAlso dolce:process .

:proposition a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#proposition" ;
	rdfs:subClassOf :abstract ;
	dc:identifier "Proposition@en"^^xsd:string ;
	dc:description "The abstract content of a proposition. Abstract content is purely combinatorial: from this viewpoint, any content that can be generated by means of combinatorial rules is assumed to exist in the domain of quantification (reified abstracts)."^^xsd:string ;
	rdfs:seeAlso dolce:proposition .

:quale a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#quale" ;
	rdfs:subClassOf :region ;
	dc:identifier "Quale@en"^^xsd:string ;
	dc:description "An atomic region."^^xsd:string ;
	rdfs:seeAlso dolce:region .

:quale_prop_part a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#part" ;
	rdfs:domain :quale ;
	a rdf:Property ;
	rdfs:range :abstract_region .

:quality a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#quality" ;
	rdfs:subClassOf :spatio_temporal_particular ;
	dc:identifier "Quality@en"^^xsd:string ;
	dc:description "Qualities can be seen as the basic entities we can perceive or measure: shapes, colors, sizes, sounds, smells, as well as weights, lengths, electrical charges... 'Quality' is often used as a synonymous of 'property', but this is not the case in this upper ontology: qualities are particulars, properties are universals. Qualities inhere to entities: every entity (including qualities themselves) comes with certain qualities, which exist as long as the entity exists."^^xsd:string ;
	rdfs:seeAlso dolce:quality .

:quality_space a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#quality_space" ;
	rdfs:subClassOf :region ;
	dc:identifier "Quality Space@en"^^xsd:string ;
	dc:description "A quality space is a topologically maximal region. The constraint of maximality cannot be given completely in OWL, but a constraint is given that creates a partition out of all quality spaces (e.g. no two quality spaces can overlap mereologically)."^^xsd:string ;
	rdfs:seeAlso dolce:quality-space .

:region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#region" ;
	rdfs:subClassOf :abstract ;
	dc:identifier "Region@en"^^xsd:string ;
	dc:description "We distinguish between a quality (e.g., the color of a specific rose), and its value (e.g., a particular shade of red). The latter is called quale, and describes the position of an individual quality within a certain conceptual space (called here quality space) Gardenfors (2000). So when we say that two roses have (exactly) the same color, we mean that their color qualities, which are distinct, have the same position in the color space, that is they have the same color quale."^^xsd:string ;
	rdfs:seeAlso dolce:region .

:region_prop_part a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#part" ;
	rdfs:domain :region ;
	rdfs:range :region .

:relevant_part a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#relevant_part" ;
	rdfs:subClassOf :feature ;
	dc:identifier "Relevant Part@en"^^xsd:string ;
	dc:description "Features that are relevant parts of their host, like a bump or an edge."^^xsd:string ;
	rdfs:seeAlso dolce:relevant-part .

:set a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#set" ;
	rdfs:subClassOf :abstract ;
	dc:identifier "Set@en"^^xsd:string ;
	dc:description "A mathematical set."^^xsd:string ;
	rdfs:seeAlso dolce:set .

:spatio_temporal_particular a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#spatio_temporal_particular" ;
	rdfs:subClassOf :particular ;
	dc:identifier "Spatiotemporal Particular@en"^^xsd:string ;
	dc:description "Dummy class for optimizing some property universes. It includes all entities that are not reifications of universals ('abstracts'), i.e. those entities that are in space-time."^^xsd:string ;
	rdfs:seeAlso dolce:spatio-temporal-particular .

:space_region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#space_region" ;
	rdfs:subClassOf :physical_region ;
	dc:identifier "Space Region@en"^^xsd:string ;
	dc:description "An ordinary space: geographical, cosmological, anatomical, topographic, etc."^^xsd:string ;
	rdfs:seeAlso dolce:space-region .

:spatial_location_q a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#spatial_location_q" ;
	rdfs:subClassOf :quality ;
	dc:identifier "Spatio Location Quality@en"^^xsd:string ;
	dc:description "A physical quality, q-located in (whose value is given within) ordinary spaces (geographical coordinates, cosmological positions, anatomical axes, etc.)."^^xsd:string ;
	rdfs:seeAlso dolce:spatial-location_q .

:spatio_temporal_region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#spatio_temporal_region" ;
	rdfs:subClassOf :space_region ;
	dc:identifier "spatio temporal region@en"^^xsd:string ;
	dc:description "Any region resulting from the composition of a space region with a temporal region, i.e. being present in region r at time t."^^xsd:string ;
	rdfs:seeAlso dolce:spatio-temporal-region .

:stative a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#stative" ;
	rdfs:subClassOf :perdurant ;
	dc:identifier "stative@en"^^xsd:string ;
	dc:description "An occurrence-type is stative or eventive according to whether it holds of the mereological sum of two of its instances, i.e. if it is cumulative or not. A sitting occurrence is stative since the sum of two sittings is still a sitting occurrence."^^xsd:string ;
	rdfs:seeAlso dolce:stative .

:state a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#state" ;
	rdfs:subClassOf :stative ;
	dc:identifier "state@en"^^xsd:string ;
	dc:description "Within stative occurrences, we distinguish between states and processes according to homeomericity: sitting is classified as a state but running is classified as a process, since there are (very short) temporal parts of a running that are not themselves runnings.In general, states differ from situations because they are not assumed to have a description from which they depend. They can be sequenced by some course, but they do not require a description as a unifying criterion.On the other hand, at any time, one can conceive a description that asserts the constraints by which a state of a certian type is such, and in this case, it becomes a situation.Since the decision of designing an explicit description that unifies a perdurant depends on context, task, interest, application, etc., when aligning an ontology do DLP, there can be indecision on where to align a state-oriented class. For example, in the WordNet alignment, we have decided to put only some physical states under 'state', e.g. 'turgor', in order to stress the social orientedness of DLP. But whereas we need to talk explicitly of the criteria by which we conceive turgor states, these will be put under 'situation'.Similar considerations are made for the other types of perdurants in DOLCE.A different notion of event (dealing with change) is currently investigated for further developments: being 'achievement', 'accomplishment', 'state', 'event', etc. can be also considered 'aspects' of processes or of parts of them. For example, the same process 'rock erosion in the Sinni valley' can be conceptualized as an accomplishment (what has brought the current state that e.g. we are trying to explain), as an achievement (the erosion process as the result of a previous accomplishment), as a state (if we collapse the time interval of the erosion into a time point), or as an event (what has changed our focus from a state to another).In the erosion case, we could have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) condensation d) transition (causality).If we want to consider all the aspects of a process together, we need to postulate a unifying descriptive set of criteria (i.e. a 'description'), according to which that process is circumstantiated in a 'situation'. The different aspects will arise as a parts of a same situation."^^xsd:string ;
	rdfs:seeAlso dolce:state .

:temporal_quality a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#temporal_quality" ;
	rdfs:subClassOf :quality ;
	dc:identifier "Temporal Quality@en"^^xsd:string ;
	dc:description "A quality inherent in a perdurant."^^xsd:string ;
	rdfs:seeAlso dolce:temporal-quality .

:temporal_location_q a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#temporal_location_q" ;
	rdfs:subClassOf :quality ;
	dc:identifier "temporal location quality@en"^^xsd:string ;
	dc:description "A temporal location quality."^^xsd:string ;
	rdfs:seeAlso dolce:temporal-location_q .

:temporal_region a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#temporal_region" ;
	rdfs:subClassOf :region ;
	dc:identifier "Temporal Region@en"^^xsd:string ;
	dc:description "A region at which only temporal qualities can be directly located. It assumes a metrics for time."^^xsd:string ;
	rdfs:seeAlso dolce:temporal-region .

:temporal_region_prop_part a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#part" ;
	rdfs:domain :temporal_region ;
	a rdf:Property ;
	rdfs:range :temporal_region .

:temporal_region_prop_q_location_of a rdf:Property ;
	rdfs:label "http://purl.org/ifgi/dolce#q_location_of" ;
	rdfs:domain :temporal_region ;
	a rdf:Property ;
	rdfs:range :temporal_quality .

:time_interval a rdfs:Class ;
	rdfs:label "http://purl.org/ifgi/dolce#time_interval" ;
	rdfs:subClassOf :temporal_region ;
	dc:identifier "Time Interval@en"^^xsd:string ;
	dc:description "A temporal region, measured according to a calendar."^^xsd:string ;
	rdfs:seeAlso dolce:time-interval .

:immediate_relation a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	dc:identifier "Immediate Relation@en"^^xsd:string ;
	dc:description "A relation that holds without additional mediating individuals. In logical terms, a non-composed relation."^^xsd:string ;
	rdfs:seeAlso dolce:immediate-relation .

:immediate_relation_i a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	dc:identifier "Immediate Relation Inverse@en"^^xsd:string ;
	dc:description "A relation that holds without additional mediating individuals. In logical terms, a non-composed relation."^^xsd:string ;
	rdfs:seeAlso dolce:immediate-relation-i .

:mediated_relation a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	dc:identifier "Mediated Relation@en"^^xsd:string ;
	dc:description "A relation that composes other relations. For example, a participation relation composed with a representation relation.Composed relation cannot be directly expressed in OWL-DL, then (at least some) compositions are expressed as class or restriction axioms."^^xsd:string ;
	rdfs:seeAlso dolce:mediated-relation .

:mediated_relation_i a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	dc:identifier "Immediate Relation Inverse@en"^^xsd:string ;
	dc:description "A relation that composes other relations. For example, a participation relation composed with a representation relation.Composed relation cannot be directly expressed in OWL-DL, then (at least some) compositions are expressed as class or restriction axioms."^^xsd:string ;
	rdfs:seeAlso dolce:mediated-relation-i .

:generic_constituent a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "Generic Constituent@en"^^xsd:string ;
	dc:description "'Constituent' should depend on some layering of the ontology. For example, scientific granularities or ontological 'strata' are typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."^^xsd:string ;
	rdfs:seeAlso dolce:generic-constituent .

:generic_constituent_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "Generic Constituent Of@en"^^xsd:string ;
	dc:description "'Constituent' should depend on some layering of the ontology. For example, scientific granularities or ontological 'strata' are typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."^^xsd:string ;
	rdfs:seeAlso dolce:generic-constituent-of .

:generic_dependent a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "generic dependent of@en"^^xsd:string ;
	dc:description "The dependence on an individual of a given type at some time. This is traditionally a relation between particulars and universals, but this one states that x generically depends on y if a z different from y, but with the same properties, can be equivalently its depend-on.This is a temporally-indexed relation (embedded in this syntax)."^^xsd:string ;
	rdfs:seeAlso dolce:generic-dependent .

:identitiy_c a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "is identitical to (Ontologically)@en"^^xsd:string ;
	dc:description "Any pair of individuals are ontologically identical if they are identical to themselves. Reflexive, symmetric, and transitive."^^xsd:string ;
	rdfs:seeAlso dolce:identitiy-c .

:identitiy_n a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "is identitical to (notionally)@en"^^xsd:string ;
	dc:description "Any pair of individuals are notionally identical iff they instantiate all and only the same concepts."^^xsd:string ;
	rdfs:seeAlso dolce:identitiy-n .

:inherent_in a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "inherent in @en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and entities."^^xsd:string ;
	rdfs:seeAlso dolce:inherent-in .

:has_quality a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :quality ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "has quality@en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and entities."^^xsd:string ;
	rdfs:seeAlso dolce:has-quality .

:t_inherent_in a rdf:Property ;
	rdfs:domain :quality ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "Generic Dependent@en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and entities at time t."^^xsd:string ;
	rdfs:seeAlso dolce:t-inherent-in .

:has_t_quality a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :quality ;
	rdfs:subPropertyOf :has_quality ;
	dc:identifier "has temporal quality@en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and entities at time t."^^xsd:string ;
	rdfs:seeAlso dolce:has-t-quality .

:part a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "has part@en"^^xsd:string ;
	dc:description "The most generic part relation, reflexive, asymmetric, and transitive."^^xsd:string ;
	rdfs:seeAlso dolce:part .

:part_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "is part of@en"^^xsd:string ;
	dc:description "The most generic part relation, reflexive, asymmetric, and transitive."^^xsd:string ;
	rdfs:seeAlso dolce:part-of .

:atomic_part a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :part ;
	dc:identifier "has atomic part@en"^^xsd:string ;
	dc:description "The part relation between a particular and an atom."^^xsd:string ;
	rdfs:seeAlso dolce:atomic-part .

:atomic_part_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :part_of ;
	dc:identifier "is atomic part of@en"^^xsd:string ;
	dc:description "The part relation between a particular and an atom."^^xsd:string ;
	rdfs:seeAlso dolce:atomic-_part-of .

:proper_part a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :part ;
	dc:identifier "has proper part@en"^^xsd:string ;
	dc:description "The proper part relation: irreflexive, antisymmetric, and transitive."^^xsd:string ;
	rdfs:seeAlso dolce:proper-part .

:proper_part_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :part_of ;
	dc:identifier "is proper part of@en"^^xsd:string ;
	dc:description "The proper part relation: irreflexive, antisymmetric, and transitive."^^xsd:string ;
	rdfs:seeAlso dolce:proper-part-of .

:boundary a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :proper_part ;
	dc:identifier "has boundary@en"^^xsd:string ;
	dc:description ""^^xsd:string ;
	rdfs:seeAlso dolce:boundary .

:boundary_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :proper_part_of ;
	dc:identifier "is boundary of@en"^^xsd:string ;
	dc:description ""^^xsd:string ;
	rdfs:seeAlso dolce:boundary-of .

:temporary_proper_part a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :proper_part ;
	dc:identifier "has proper part at time t@en"^^xsd:string ;
	dc:description "Being proper part at time t. It holds for endurants only. This is important to model proper parts that can change or be lost over time without affecting the identity of the whole."^^xsd:string ;
	rdfs:seeAlso dolce:temporary-proper-part .

:temporary_proper_part_of a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :proper_part_of ;
	dc:identifier "is proper part at time t of@en"^^xsd:string ;
	dc:description "Being proper part at time t. It holds for endurants only. This is important to model proper parts that can change or be lost over time without affecting the identity of the whole."^^xsd:string ;
	rdfs:seeAlso dolce:temporary-proper-part-of .

:temporary_part a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :part ;
	dc:identifier "temporary part@en"^^xsd:string ;
	dc:description "Being part at time t. It holds for endurants only. This is important to model parts that can change or be lost over time without affecting the identity of the whole. In FOL, this is expressed as a ternary relation, but in DLs we only can reason with binary relations, then only the necessary axiom of compresence is represented here."^^xsd:string ;
	rdfs:seeAlso dolce:temporary_part .

:temporary_part_of a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "temporary part of@en"^^xsd:string ;
	dc:description "sss"^^xsd:string ;
	rdfs:seeAlso dolce:temporary_part_of .

:constant_participant a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :participant ;
	dc:identifier "constant participant in@en"^^xsd:string ;
	dc:description "Anytime x is present, x has participant y. In other words, all parts of x have a same participant.Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president')."^^xsd:string ;
	rdfs:seeAlso dolce:constant_participant .

:constant_participant_in a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :participant_in ;
	dc:identifier "Generic Dependent@en"^^xsd:string ;
	dc:description "Anytime x is present, x has participant y. In other words, all parts of x have a same participant.Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president')."^^xsd:string ;
	rdfs:seeAlso dolce:constant_participant_in .

:specific_constant_dependent a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "specific constant dependent@en"^^xsd:string ;
	dc:description "The constant dependence between two individuals. Taken here as primitive."^^xsd:string ;
	rdfs:seeAlso dolce:specific_constant_dependent .

:specifically_constantly_dependent_on a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "specifically constantly dependent on@en"^^xsd:string ;
	dc:description "The constant dependence between two individuals. Taken here as primitive."^^xsd:string ;
	rdfs:seeAlso dolce:specifically_constantly_dependent_on .

:temporary_participant_in a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :perdurant ;
	rdfs:subPropertyOf :participant_in ;
	dc:identifier "temporary participant in@en"^^xsd:string ;
	dc:description "x participates in some of y's parts."^^xsd:string ;
	rdfs:seeAlso dolce:temporary_participant_in .

:temporary_participant a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :participant ;
	dc:identifier "temporary participant@en"^^xsd:string ;
	dc:description "Only some parts of the perdurant p have a participant e.In fact, participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').Implicitly, this relation has a temporal indexing.If needed, in OWL one can derive such indexing by expliciting what parts of p have e as _constant_ participant.An appropriate OWL axiom is created to bind this relation to a proper part of it, which has the temporary_participant as a constant one."^^xsd:string ;
	rdfs:seeAlso dolce:temporary_participant .

:host_of a rdf:Property ;
	rdfs:domain :physical_endurant ;
	rdfs:range :feature ;
	rdfs:subPropertyOf :specific_constant_dependent ;
	dc:identifier "is host of@en"^^xsd:string ;
	dc:description "The immediate relation holding for features and entities."^^xsd:string ;
	rdfs:seeAlso dolce:host_of .

:host a rdf:Property ;
	rdfs:domain :feature ;
	rdfs:range :physical_endurant ;
	rdfs:subPropertyOf :specifically_constantly_dependent_on ;
	dc:identifier "hosts@en"^^xsd:string ;
	dc:description "The immediate relation holding for features and entities."^^xsd:string ;
	rdfs:seeAlso dolce:host .

:specific_constant_constituent_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "specific constant constituent of@en"^^xsd:string ;
	dc:description "'Constituent' should depend on some layering of the ontology. For example, scientific granularities or ontological 'strata' are typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."^^xsd:string ;
	rdfs:seeAlso dolce:specific_constant_constituent_of .

:specific_constant_constituent a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "specific constant constituent@en"^^xsd:string ;
	dc:description "'Constituent' should depend on some layering of the ontology. For example, scientific granularities or ontological 'strata' are typical layerings. A constituent is a part belonging to a lower layer. Since layering is actually a partition of the ontology, constituents are not properly classified as parts, although this kinship can be intuitive for common sense. Example of specific constant constituents are the entities constituting a setting (a situation), whilethe entities constituting a collection are examples of generic constant constituents."^^xsd:string ;
	rdfs:seeAlso dolce:specific_constant_constituent .

:weak_connection a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "weak connection@en"^^xsd:string ;
	dc:description "he basic connection, not requiring a common boundary."^^xsd:string ;
	rdfs:seeAlso dolce:weak_connection .

:r_location_of a rdf:Property ;
	rdfs:domain :region ;
	rdfs:range :region ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "is location of@en"^^xsd:string ;
	dc:description "A relation for representing regions within other regions, e.g. in measurement spaces (space composition).The result of r_location composition is a new 'composed region', which can either preserve the same region type (e.g. physical+physical_>physical, or physical+abstract_>physical), or not (e.g. physical+abstract_>abstract). See 'composition description' for more details.In some cases, space composition is conventional, i.e. a space is just 'located' at another space, as in the case of measurement spaces:(direct composition): r r_location r1In other cases, r_location implies a complex path, e.g. :(homogeneous composition): r q_location_of q inherent_in x has_quality q1 q_location r1(heterogeneous composition across endurants and perdurants): r q_location_of q inherent_in e participant_in p has_quality q1 q_location r1(heterogeneous composition across physical and non_physical endurants): r q_location_of q inherent_in pe specific_constant_dependent npe has_quality q1 q_location r1"^^xsd:string ;
	rdfs:seeAlso dolce:weak_connection .

:r_location a rdf:Property ;
	rdfs:domain :region ;
	rdfs:range :region ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "has location@en"^^xsd:string ;
	dc:description "A relation for representing regions within other regions, e.g. in measurement spaces (space composition).The result of r_location composition is a new 'composed region', which can either preserve the same region type (e.g. physical+physical_>physical, or physical+abstract_>physical), or not (e.g. physical+abstract_>abstract). See 'composition description' for more details.In some cases, space composition is conventional, i.e. a space is just 'located' at another space, as in the case of measurement spaces:(direct composition): r r_location r1. In other cases, r_location implies a complex path, e.g. :(homogeneous composition): r q_location_of q inherent_in x has_quality q1 q_location r1(heterogeneous composition across endurants and perdurants): r q_location_of q inherent_in e participant_in p has_quality q1 q_location r1(heterogeneous composition across physical and non_physical endurants): r q_location_of q inherent_in pe specific_constant_dependent npe has_quality q1 q_location r1"^^xsd:string ;
	rdfs:seeAlso dolce:r_location .

:quale_of a rdf:Property ;
	rdfs:domain :quale ;
	rdfs:range :quality ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "is quale of@en"^^xsd:string ;
	dc:description "A quality having a q_location at an atomic region."^^xsd:string ;
	rdfs:seeAlso dolce:quale_of .

:has_quale a rdf:Property ;
	rdfs:domain :quality ;
	rdfs:range :quale ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "has quale@en"^^xsd:string ;
	dc:description "A quality having a q_location at an atomic region."^^xsd:string ;
	rdfs:seeAlso dolce:has_quale .

:total_temporary_participant a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :temporary_participant ;
	dc:identifier "total temporary participant@en"^^xsd:string ;
	dc:description "The perdurant p has a participant e that temporarily participates in p with all its parts, e.g. in 'I played the concert' (where I actually played just an ouverture).See also 'temporary_participant'."^^xsd:string ;
	rdfs:seeAlso dolce:total_temporary_participant .

:total_temporary_participant_in a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :perdurant ;
	rdfs:subPropertyOf :temporary_participant_in ;
	dc:identifier "total_temporary_participant_in@en"^^xsd:string ;
	dc:description "The perdurant p has a participant e that temporarily participates in p with all its parts, e.g. in 'I played the concert' (where I actually played just an ouverture).See also 'temporary_participant'."^^xsd:string ;
	rdfs:seeAlso dolce:total_temporary_participant_in .

:generically_dependent_on a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "generically dependent on@en"^^xsd:string ;
	dc:description "sss"^^xsd:string ;
	rdfs:seeAlso dolce:generically_dependent_on .

:q_present_at a rdf:Property ;
	rdfs:domain :physical_quality ;
	rdfs:range :time_interval ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "q_present_at@en"^^xsd:string ;
	dc:description "Presence of a physical quality when inheres in an endurant."^^xsd:string ;
	rdfs:seeAlso dolce:q_present_at .

:time_of_q_presence_of a rdf:Property ;
	rdfs:domain :time_interval ;
	rdfs:range :physical_quality ;
	rdfs:subPropertyOf :mediated_relation_i ;
	dc:identifier "time_of_q_presence_of@en"^^xsd:string ;
	dc:description "Presence of a physical quality when inheres in an endurant."^^xsd:string ;
	rdfs:seeAlso dolce:time_of_q_presence_of .

:mereologically_coincides a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :temporary_part ;
	dc:identifier "mereologically_coincides@en"^^xsd:string ;
	dc:description "Having the same parts at time t."^^xsd:string ;
	rdfs:seeAlso dolce:mereologically_coincides .

:participant a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "participant@en"^^xsd:string ;
	dc:description "The immediate relation holding between endurants and perdurants (e.g. in 'the car is running').Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').A 'functional' participant is specialized for those forms of participation that depend on the nature of participants, processes, or on the intentionality of agentive participants. Traditional 'thematic role' should be mapped to functional participation.For relations holding between participants in a same perdurant, see the co_participates relation."^^xsd:string ;
	rdfs:seeAlso dolce:participant .

:participant_in a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :perdurant ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "participant in@en"^^xsd:string ;
	dc:description "The immediate relation holding between endurants and perdurants (e.g. in 'the car is running').Participation can be constant (in all parts of the perdurant, e.g. in 'the car is running'), or temporary (in only some parts, e.g. in 'I'm electing the president').A 'functional' participant is specialized for those forms of participation that depend on the nature of participants, processes, or on the intentionality of agentive participants. Traditional 'thematic role' should be mapped to functional participation.For relations holding between participants in a same perdurant, see the co_participates relation."^^xsd:string ;
	rdfs:seeAlso dolce:participant_in .

:life a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :constant_participant_in ;
	dc:identifier "life@en"^^xsd:string ;
	dc:description "Total constant participation applied to the mereological sum of the perdurants in which an endurant participates."^^xsd:string ;
	rdfs:seeAlso dolce:life .

:life_of a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :constant_participant ;
	dc:identifier "life of@en"^^xsd:string ;
	dc:description "Total constant participation applied to the mereological sum of the perdurants in which an endurant participates."^^xsd:string ;
	rdfs:seeAlso dolce:life-of .

:partly_compresent a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "partly compresent@en"^^xsd:string ;
	dc:description "A composed (mediated) relation used here to make relations 'temporary': by adding it as a superrelation, the effect is that the two related endurants cannot be present at all the same time intervals, but are compresent at least at some time interval (see related axiom).In FOL, the same constraint can be stated directly by coreference.This workaround can be used to index time of relations that involve reciprocal dependency, but it cannot be used in general with relations involving multiple strata of reality. For example, _about_ relation can be temporally indexed, without involving that the time of the information object overlaps with the time of the entity the information is about (but this works for e.g. the _realizes_ relation between information objects and entities whatsoever). The different temporal constraints of about vs. expresses probably derive from the dependency of aboutness from conception (to be about x, an information object should also express a description d that is satisfied by a situation including x, then temporal overlapping of _about_ is true in virtue of d). On the other hand, even conceives cannot be indexed in this way, because overlapping does not hold between the time og the conceiving agent, and the conceived description (or situation)."^^xsd:string ;
	rdfs:seeAlso dolce:partly_compresent .

:abstract_location_of a rdf:Property ;
	rdfs:domain :abstract_region ;
	rdfs:range :non_physical_endurant ;
	rdfs:subPropertyOf :exact_location_of ;
	dc:identifier "abstract location of@en"^^xsd:string ;
	dc:description "Analytical location holding between non_physical endurants and abstract regions."^^xsd:string ;
	rdfs:seeAlso dolce:abstract_location_of .

:abstract_location a rdf:Property ;
	rdfs:domain :non_physical_endurant ;
	rdfs:range :abstract_region ;
	rdfs:subPropertyOf :exact_location ;
	dc:identifier "abstract location@en"^^xsd:string ;
	dc:description "Analytical location holding between non_physical endurants and abstract regions."^^xsd:string ;
	rdfs:seeAlso dolce:abstract_location .

:generic_location_of a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation_i ;
	dc:identifier "generic location of@en"^^xsd:string ;
	dc:description "The most generic location relation, probably equivalent to more than one image schema in a cognitive system (e.g. containment for exact location, proximity for approximate location).This is meant to reason on generalized, common sense as well as formal locations, including naive localization, between any kinds of entities. Generic location is branched into 'exact' location, ranging on regions, and 'approximate' (naive) location, ranging on non_regions."^^xsd:string ;
	rdfs:seeAlso dolce:generic_location_of .

:generic_location a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "generic_location@en"^^xsd:string ;
	dc:description "The most generic location relation, probably equivalent to more than one image schema in a cognitive system (e.g. containment for exact location, proximity for approximate location).This is meant to reason on generalized, common sense as well as formal locations, including naive localization, between any kinds of entities. Generic location is branched into 'exact' location, ranging on regions, and 'approximate' (naive) location, ranging on non_regions."^^xsd:string ;
	rdfs:seeAlso dolce:generic_location .

:physical_location a rdf:Property ;
	rdfs:domain :physical_endurant ;
	rdfs:range :physical_region ;
	rdfs:subPropertyOf :exact_location ;
	dc:identifier "physical_location@en"^^xsd:string ;
	dc:description "Analytical location holding between physical endurants and physical regions."^^xsd:string ;
	rdfs:seeAlso dolce:mediated_relation_i .

:physical_location_of a rdf:Property ;
	rdfs:domain :physical_region ;
	rdfs:range :physical_endurant ;
	rdfs:subPropertyOf :exact_location_of ;
	dc:identifier "physical_location_of@en"^^xsd:string ;
	dc:description "Analytical location holding between physical endurants and physical regions."^^xsd:string ;
	rdfs:seeAlso dolce:physical_location_of .

:q_location_of a rdf:Property ;
	rdfs:domain :region ;
	rdfs:range :quality ;
	rdfs:subPropertyOf :immediate_relation_i ;
	dc:identifier "q_location_of@en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and regions. See 'generic location' branching for the various mediated relations that embed q_location."^^xsd:string ;
	rdfs:seeAlso dolce:q_location_of .

:q_location a rdf:Property ;
	rdfs:domain :quality ;
	rdfs:range :region ;
	rdfs:subPropertyOf :immediate_relation ;
	dc:identifier "q_location@en"^^xsd:string ;
	dc:description "The immediate relation holding for qualities and regions. See 'generic location' branching for the various mediated relations that embed q_location."^^xsd:string ;
	rdfs:seeAlso dolce:q_location .

:total_constant_participant a rdf:Property ;
	rdfs:domain :perdurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :constant_participant ;
	dc:identifier "total_constant_participant@en"^^xsd:string ;
	dc:description "The perdurant p has a participant e that constantly participates in p with all its parts, e.g. in 'I played the concert' (where the concert is a solo concert)."^^xsd:string ;
	rdfs:seeAlso dolce:total_constant_participant .

:total_constant_participant_in a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :perdurant ;
	rdfs:subPropertyOf :constant_participant_in ;
	dc:identifier "total_constant_participant_in@en"^^xsd:string ;
	dc:description "The perdurant p has a participant e that constantly participates in p with all its parts, e.g. in 'I played the concert' (where the concert is a solo concert)."^^xsd:string ;
	rdfs:seeAlso dolce:total_constant_participant_in .

:sibling_part a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "sibling part@en"^^xsd:string ;
	dc:description "Mereological sibling: having a common whole"^^xsd:string ;
	rdfs:seeAlso dolce:sibling_part .

:spatio_temporally_present_at a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :spatio_temporal_region ;
	rdfs:subPropertyOf :exact_location ;
	dc:identifier "spatio_temporally_present_at@en"^^xsd:string ;
	dc:description ""^^xsd:string ;
	rdfs:seeAlso dolce:spatio_temporally_present_at .

:spatio_temporal_presence_of a rdf:Property ;
	rdfs:domain :spatio_temporal_region ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :exact_location_of ;
	dc:identifier "spatio_temporal_presence_of@en"^^xsd:string ;
	dc:description ""^^xsd:string ;
	rdfs:seeAlso dolce:spatio_temporal_presence_of .

:strong_connection a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "strong_connection@en"^^xsd:string ;
	dc:description "By strong connection here we mean a connection between two entities that share a boundary."^^xsd:string ;
	rdfs:seeAlso dolce:strong_connection .

:exact_location_of a rdf:Property ;
	rdfs:domain :region ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :generic_location_of ;
	dc:identifier "exact location of@en"^^xsd:string ;
	dc:description "A location relation bounded to regions and defined analytically through the composition of inherence and q_location. This is the analytical version of 'generic location'."^^xsd:string ;
	rdfs:seeAlso dolce:exact_location_of .

:exact_location a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :region ;
	rdfs:subPropertyOf :generic_location ;
	dc:identifier "exact location@en"^^xsd:string ;
	dc:description "A location relation bounded to regions and defined analytically through the composition of inherence and q_location. This is the analytical version of 'generic location'."^^xsd:string ;
	rdfs:seeAlso dolce:exact_location .

:temporary_atomic_part a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :temporary_proper_part ;
	dc:identifier "temporary_atomic_part@en"^^xsd:string ;
	dc:description "Having an atom as part at a time t."^^xsd:string ;
	rdfs:seeAlso dolce:temporary_atomic_part .

:temporary_atomic_part_of a rdf:Property ;
	rdfs:domain :endurant ;
	rdfs:range :endurant ;
	rdfs:subPropertyOf :temporary_proper_part_of ;
	dc:identifier "temporary_atomic_part_of@en"^^xsd:string ;
	dc:description "Having an atom as part at a time t."^^xsd:string ;
	rdfs:seeAlso dolce:temporary_atomic_part_of .

:overlaps a rdf:Property ;
	rdfs:domain :particular ;
	rdfs:range :particular ;
	rdfs:subPropertyOf :mediated_relation ;
	dc:identifier "overlaps@en"^^xsd:string ;
	dc:description "Mereological overlap: having a common part."^^xsd:string ;
	rdfs:seeAlso dolce:overlaps .

_:node16tsn6s7vx2 rdfs:label "http://purl.org/ifgi/dolce#define_inverse" ;
	a <http://www.wsmo.org/wsml/wsml-syntax#Axiom> ;
	rdf:value """_\"http://purl.org/ifgi/dolce#immediate_relation\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#immediate_relation_i\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#mediated_relation\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#mediated_relation_i\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#generic_constituent\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#generic_constituent_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#generic_dependent\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#generic_dependent_on\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#identitiy_c\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#identitiy_c\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#identitiy_n\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#identitiy_n\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#sibling_part\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#sibling_part\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#inherent_in\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#has_quality\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#t_inherent_in\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#has_t_quality\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#part\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#part_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#atomic_part\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#atomic_part_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#proper_part\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#proper_part_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#boundary\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#boundary_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> , """_\"http://purl.org/ifgi/dolce#temporary_proper_part\"(?x,?y)
 implies 
_\"http://purl.org/ifgi/dolce#temporary_proper_part_of\"(?y,?x). """^^<http://www.wsmo.org/wsml/wsml-syntax#AxiomLiteral> .
